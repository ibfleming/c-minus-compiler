./tests/hw3/allbad: PASS
./tests/hw3/allgood: PASS
./tests/hw3/array: PASS
./tests/hw3/arrayops: PASS
./tests/hw3/arrayx: PASS
./tests/hw3/assignb: PASS
./tests/hw3/assignBool: PASS
./tests/hw3/assignChar: PASS
./tests/hw3/assignInt: PASS
./tests/hw3/break2: PASS
./tests/hw3/break3: PASS
./tests/hw3/break4: PASS
./tests/hw3/break: PASS
./tests/hw3/call2: PASS
./tests/hw3/call3: PASS
./tests/hw3/call: PASS
./tests/hw3/callerr: PASS
./tests/hw3/constants: PASS
./tests/hw3/cover: FAIL
Diff for ./tests/hw3/cover:
EXPECTED | MINE
ERROR(19): Unary '--' requires an operand of type int but was given type char.			ERROR(19): Unary '--' requires an operand of type int but was given type char.
ERROR(20): Unary '?' requires an operand of type int but was given type char.			ERROR(20): Unary '?' requires an operand of type int but was given type char.
ERROR(22): Cannot index nonarray 'e'.								ERROR(22): Cannot index nonarray 'e'.
ERROR(22): Cannot index nonarray 'e'.								ERROR(22): Cannot index nonarray 'e'.
ERROR(22): '+' requires operands of type int but lhs is of type bool.				ERROR(22): '+' requires operands of type int but lhs is of type bool.
ERROR(22): '+' requires operands of type int but rhs is of type bool.				ERROR(22): '+' requires operands of type int but rhs is of type bool.
ERROR(23): Cannot index nonarray 'e'.								ERROR(23): Cannot index nonarray 'e'.
ERROR(23): Cannot index nonarray 'e'.								ERROR(23): Cannot index nonarray 'e'.
ERROR(23): Array 'e' should be indexed by type int but got type bool.				ERROR(23): Array 'e' should be indexed by type int but got type bool.
ERROR(26): 'and' requires operands of type bool but lhs is of type int.				ERROR(26): 'and' requires operands of type bool but lhs is of type int.
ERROR(26): 'and' requires operands of type bool but rhs is of type int.				ERROR(26): 'and' requires operands of type bool but rhs is of type int.
WARNING(31): The variable 'i' seems not to be used.					      <
WARNING(31): The variable 'x' seems not to be used.						WARNING(31): The variable 'x' seems not to be used.
											      >	WARNING(31): The variable 'i' seems not to be used.
WARNING(39): Variable 'b' may be uninitialized when used here.					WARNING(39): Variable 'b' may be uninitialized when used here.
WARNING(39): Variable 'd' may be uninitialized when used here.					WARNING(39): Variable 'd' may be uninitialized when used here.
WARNING(39): Variable 'e' may be uninitialized when used here.					WARNING(39): Variable 'e' may be uninitialized when used here.
WARNING(39): Variable 'f' may be uninitialized when used here.					WARNING(39): Variable 'f' may be uninitialized when used here.
WARNING(35): The variable 'a' seems not to be used.						WARNING(35): The variable 'a' seems not to be used.
WARNING(36): The variable 'c' seems not to be used.						WARNING(36): The variable 'c' seems not to be used.
WARNING(38): The variable 'g' seems not to be used.						WARNING(38): The variable 'g' seems not to be used.
Number of warnings: 9										Number of warnings: 9
Number of errors: 11										Number of errors: 11
./tests/hw3/decl: PASS
./tests/hw3/emptyline: PASS
./tests/hw3/everythingF24: FAIL
Diff for ./tests/hw3/everythingF24:
EXPECTED | MINE
WARNING(46): Variable 'trousers' may be uninitialized when used here.				WARNING(46): Variable 'trousers' may be uninitialized when used here.
											      >	WARNING(47): Variable 'wrong' may be uninitialized when used here.
WARNING(62): Variable 'Wensleydale' may be uninitialized when used here.			WARNING(62): Variable 'Wensleydale' may be uninitialized when used here.
WARNING(58): The variable 'c' seems not to be used.						WARNING(58): The variable 'c' seems not to be used.
WARNING(54): The variable 'cheese' seems not to be used.					WARNING(54): The variable 'cheese' seems not to be used.
WARNING(59): The variable 'i' seems not to be used.						WARNING(59): The variable 'i' seems not to be used.
WARNING(54): The variable 'launch' seems not to be used.					WARNING(54): The variable 'launch' seems not to be used.
WARNING(70): The variable 'skein' seems not to be used.						WARNING(70): The variable 'skein' seems not to be used.
WARNING(82): Variable 'chicken' may be uninitialized when used here.				WARNING(82): Variable 'chicken' may be uninitialized when used here.
WARNING(82): Variable 'run' may be uninitialized when used here.				WARNING(82): Variable 'run' may be uninitialized when used here.
WARNING(85): Variable 'wallace' may be uninitialized when used here.				WARNING(85): Variable 'wallace' may be uninitialized when used here.
WARNING(85): Variable 'gromit' may be uninitialized when used here.				WARNING(85): Variable 'gromit' may be uninitialized when used here.
WARNING(90): The variable 'y' seems not to be used.						WARNING(90): The variable 'y' seems not to be used.
WARNING(98): The variable 'pastry' seems not to be used.					WARNING(98): The variable 'pastry' seems not to be used.
WARNING(125): Variable 'yarn' may be uninitialized when used here.				WARNING(125): Variable 'yarn' may be uninitialized when used here.
WARNING(127): Variable 'preston' may be uninitialized when used here.			      <
WARNING(127): Variable 'shaun' may be uninitialized when used here.				WARNING(127): Variable 'shaun' may be uninitialized when used here.
											      >	WARNING(127): Variable 'preston' may be uninitialized when used here.
WARNING(116): The variable 'wool' seems not to be used.						WARNING(116): The variable 'wool' seems not to be used.
Var: gromit of type int [line: 6]								Var: gromit of type int [line: 6]
Sibling: 1  Var: mysteriousPenguin of type int [line: 6]					Sibling: 1  Var: mysteriousPenguin of type int [line: 6]
Sibling: 2  Func: wallace returns type void [line: 9]						Sibling: 2  Func: wallace returns type void [line: 9]
.   Child: 0  Parm: wrong of type int [line: 9]							.   Child: 0  Parm: wrong of type int [line: 9]
.   Sibling: 1  Parm: trousers of type int [line: 9]						.   Sibling: 1  Parm: trousers of type int [line: 9]
.   Child: 1  Compound [line: 10]								.   Child: 1  Compound [line: 10]
.   .   Child: 0  Var: close of type bool [line: 11]						.   .   Child: 0  Var: close of type bool [line: 11]
.   .   .   Child: 0  Const true of type bool [line: 11]					.   .   .   Child: 0  Const true of type bool [line: 11]
.   .   Sibling: 1  Var: shave of type bool [line: 11]						.   .   Sibling: 1  Var: shave of type bool [line: 11]
.   .   .   Child: 0  Const false of type bool [line: 11]					.   .   .   Child: 0  Const false of type bool [line: 11]
.   .   Sibling: 2  Var: cheese of type int [line: 12]						.   .   Sibling: 2  Var: cheese of type int [line: 12]
.   .   .   Child: 0  Const 17 of type int [line: 12]						.   .   .   Child: 0  Const 17 of type int [line: 12]
.   .   Child: 1  Const 1729 of type int [line: 14]						.   .   Child: 1  Const 1729 of type int [line: 14]
.   .   Sibling: 1  Id: close of type bool [line: 15]						.   .   Sibling: 1  Id: close of type bool [line: 15]
.   .   Sibling: 2  Op: + of type int [line: 16]						.   .   Sibling: 2  Op: + of type int [line: 16]
.   .   .   Child: 0  Op: * of type int [line: 16]						.   .   .   Child: 0  Op: * of type int [line: 16]
.   .   .   .   Child: 0  Const 11 of type int [line: 16]					.   .   .   .   Child: 0  Const 11 of type int [line: 16]
.   .   .   .   Child: 1  Const 22 of type int [line: 16]					.   .   .   .   Child: 1  Const 22 of type int [line: 16]
.   .   .   Child: 1  Op: * of type int [line: 16]						.   .   .   Child: 1  Op: * of type int [line: 16]
.   .   .   .   Child: 0  Const 33 of type int [line: 16]					.   .   .   .   Child: 0  Const 33 of type int [line: 16]
.   .   .   .   Child: 1  Const 44 of type int [line: 16]					.   .   .   .   Child: 1  Const 44 of type int [line: 16]
.   .   Sibling: 3  Assign: := of type bool [line: 17]						.   .   Sibling: 3  Assign: := of type bool [line: 17]
.   .   .   Child: 0  Id: close of type bool [line: 17]						.   .   .   Child: 0  Id: close of type bool [line: 17]
.   .   .   Child: 1  Id: shave of type bool [line: 17]						.   .   .   Child: 1  Id: shave of type bool [line: 17]
.   .   Sibling: 4  Assign: := of type int [line: 18]						.   .   Sibling: 4  Assign: := of type int [line: 18]
.   .   .   Child: 0  Id: wrong of type int [line: 18]						.   .   .   Child: 0  Id: wrong of type int [line: 18]
.   .   .   Child: 1  Op: % of type int [line: 18]						.   .   .   Child: 1  Op: % of type int [line: 18]
.   .   .   .   Child: 0  Id: trousers of type int [line: 18]					.   .   .   .   Child: 0  Id: trousers of type int [line: 18]
.   .   .   .   Child: 1  Op: / of type int [line: 18]						.   .   .   .   Child: 1  Op: / of type int [line: 18]
.   .   .   .   .   Child: 0  Const 666 of type int [line: 18]					.   .   .   .   .   Child: 0  Const 666 of type int [line: 18]
.   .   .   .   .   Child: 1  Id: wrong of type int [line: 18]					.   .   .   .   .   Child: 1  Id: wrong of type int [line: 18]
.   .   Sibling: 5  Assign: := of type int [line: 19]						.   .   Sibling: 5  Assign: := of type int [line: 19]
.   .   .   Child: 0  Id: gromit of type int [line: 19]						.   .   .   Child: 0  Id: gromit of type int [line: 19]
.   .   .   Child: 1  Op: + of type int [line: 19]						.   .   .   Child: 1  Op: + of type int [line: 19]
.   .   .   .   Child: 0  Op: - of type int [line: 19]						.   .   .   .   Child: 0  Op: - of type int [line: 19]
.   .   .   .   .   Child: 0  Op: * of type int [line: 19]					.   .   .   .   .   Child: 0  Op: * of type int [line: 19]
.   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 19]				.   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 19]
.   .   .   .   .   .   Child: 1  Id: trousers of type int [line: 19]				.   .   .   .   .   .   Child: 1  Id: trousers of type int [line: 19]
.   .   .   .   .   Child: 1  Id: gromit of type int [line: 19]					.   .   .   .   .   Child: 1  Id: gromit of type int [line: 19]
.   .   .   .   Child: 1  Op: chsign of type int [line: 19]					.   .   .   .   Child: 1  Op: chsign of type int [line: 19]
.   .   .   .   .   Child: 0  Const 42 of type int [line: 19]					.   .   .   .   .   Child: 0  Const 42 of type int [line: 19]
.   .   Sibling: 6  Assign: += of type int [line: 20]						.   .   Sibling: 6  Assign: += of type int [line: 20]
.   .   .   Child: 0  Id: gromit of type int [line: 20]						.   .   .   Child: 0  Id: gromit of type int [line: 20]
.   .   .   Child: 1  Const 27182818 of type int [line: 20]					.   .   .   Child: 1  Const 27182818 of type int [line: 20]
.   .   Sibling: 7  Assign: -= of type int [line: 21]						.   .   Sibling: 7  Assign: -= of type int [line: 21]
.   .   .   Child: 0  Id: gromit of type int [line: 21]						.   .   .   Child: 0  Id: gromit of type int [line: 21]
.   .   .   Child: 1  Op: chsign of type int [line: 21]						.   .   .   Child: 1  Op: chsign of type int [line: 21]
.   .   .   .   Child: 0  Const 31415927 of type int [line: 21]					.   .   .   .   Child: 0  Const 31415927 of type int [line: 21]
.   .   Sibling: 8  Assign: /= of type int [line: 22]						.   .   Sibling: 8  Assign: /= of type int [line: 22]
.   .   .   Child: 0  Id: gromit of type int [line: 22]						.   .   .   Child: 0  Id: gromit of type int [line: 22]
.   .   .   Child: 1  Assign: *= of type int [line: 22]						.   .   .   Child: 1  Assign: *= of type int [line: 22]
.   .   .   .   Child: 0  Id: wrong of type int [line: 22]					.   .   .   .   Child: 0  Id: wrong of type int [line: 22]
.   .   .   .   Child: 1  Const 42 of type int [line: 22]					.   .   .   .   Child: 1  Const 42 of type int [line: 22]
.   .   Sibling: 9  Assign: := of type bool [line: 23]						.   .   Sibling: 9  Assign: := of type bool [line: 23]
.   .   .   Child: 0  Id: close of type bool [line: 23]						.   .   .   Child: 0  Id: close of type bool [line: 23]
.   .   .   Child: 1  Op: and of type bool [line: 23]						.   .   .   Child: 1  Op: and of type bool [line: 23]
.   .   .   .   Child: 0  Op: < of type bool [line: 23]						.   .   .   .   Child: 0  Op: < of type bool [line: 23]
.   .   .   .   .   Child: 0  Id: wrong of type int [line: 23]					.   .   .   .   .   Child: 0  Id: wrong of type int [line: 23]
.   .   .   .   .   Child: 1  Id: trousers of type int [line: 23]				.   .   .   .   .   Child: 1  Id: trousers of type int [line: 23]
.   .   .   .   Child: 1  Op: <= of type bool [line: 23]					.   .   .   .   Child: 1  Op: <= of type bool [line: 23]
.   .   .   .   .   Child: 0  Id: trousers of type int [line: 23]				.   .   .   .   .   Child: 0  Id: trousers of type int [line: 23]
.   .   .   .   .   Child: 1  Id: gromit of type int [line: 23]					.   .   .   .   .   Child: 1  Id: gromit of type int [line: 23]
.   .   Sibling: 10  Assign: := of type bool [line: 24]						.   .   Sibling: 10  Assign: := of type bool [line: 24]
.   .   .   Child: 0  Id: shave of type bool [line: 24]						.   .   .   Child: 0  Id: shave of type bool [line: 24]
.   .   .   Child: 1  Op: and of type bool [line: 24]						.   .   .   Child: 1  Op: and of type bool [line: 24]
.   .   .   .   Child: 0  Op: > of type bool [line: 24]						.   .   .   .   Child: 0  Op: > of type bool [line: 24]
.   .   .   .   .   Child: 0  Id: wrong of type int [line: 24]					.   .   .   .   .   Child: 0  Id: wrong of type int [line: 24]
.   .   .   .   .   Child: 1  Id: trousers of type int [line: 24]				.   .   .   .   .   Child: 1  Id: trousers of type int [line: 24]
.   .   .   .   Child: 1  Op: >= of type bool [line: 24]					.   .   .   .   Child: 1  Op: >= of type bool [line: 24]
.   .   .   .   .   Child: 0  Id: trousers of type int [line: 24]				.   .   .   .   .   Child: 0  Id: trousers of type int [line: 24]
.   .   .   .   .   Child: 1  Id: gromit of type int [line: 24]					.   .   .   .   .   Child: 1  Id: gromit of type int [line: 24]
.   .   Sibling: 11  Compound [line: 25]							.   .   Sibling: 11  Compound [line: 25]
.   .   .   Child: 0  Var: a of type int [line: 26]						.   .   .   Child: 0  Var: a of type int [line: 26]
.   .   .   Sibling: 1  Var: grand of type int [line: 26]					.   .   .   Sibling: 1  Var: grand of type int [line: 26]
.   .   .   .   Child: 0  Op: / of type int [line: 26]						.   .   .   .   Child: 0  Op: / of type int [line: 26]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 26]					.   .   .   .   .   Child: 0  Const 1 of type int [line: 26]
.   .   .   .   .   Child: 1  Const 2 of type int [line: 26]					.   .   .   .   .   Child: 1  Const 2 of type int [line: 26]
.   .   .   Sibling: 2  Var: day of type int [line: 26]						.   .   .   Sibling: 2  Var: day of type int [line: 26]
.   .   .   .   Child: 0  Op: * of type int [line: 26]						.   .   .   .   Child: 0  Op: * of type int [line: 26]
.   .   .   .   .   Child: 0  Const 3 of type int [line: 26]					.   .   .   .   .   Child: 0  Const 3 of type int [line: 26]
.   .   .   .   .   Child: 1  Const 4 of type int [line: 26]					.   .   .   .   .   Child: 1  Const 4 of type int [line: 26]
.   .   .   Sibling: 3  Var: out of type int [line: 26]						.   .   .   Sibling: 3  Var: out of type int [line: 26]
.   .   .   .   Child: 0  Op: chsign of type int [line: 26]					.   .   .   .   Child: 0  Op: chsign of type int [line: 26]
.   .   .   .   .   Child: 0  Const 9 of type int [line: 26]					.   .   .   .   .   Child: 0  Const 9 of type int [line: 26]
.   .   .   Child: 1  Assign: := of type int [line: 27]						.   .   .   Child: 1  Assign: := of type int [line: 27]
.   .   .   .   Child: 0  Id: a of type int [line: 27]						.   .   .   .   Child: 0  Id: a of type int [line: 27]
.   .   .   .   Child: 1  Assign: += of type int [line: 27]					.   .   .   .   Child: 1  Assign: += of type int [line: 27]
.   .   .   .   .   Child: 0  Id: grand of type int [line: 27]					.   .   .   .   .   Child: 0  Id: grand of type int [line: 27]
.   .   .   .   .   Child: 1  Assign: -= of type int [line: 27]					.   .   .   .   .   Child: 1  Assign: -= of type int [line: 27]
.   .   .   .   .   .   Child: 0  Id: day of type int [line: 27]				.   .   .   .   .   .   Child: 0  Id: day of type int [line: 27]
.   .   .   .   .   .   Child: 1  Id: out of type int [line: 27]				.   .   .   .   .   .   Child: 1  Id: out of type int [line: 27]
.   .   Sibling: 12  Assign: := of type bool [line: 29]						.   .   Sibling: 12  Assign: := of type bool [line: 29]
.   .   .   Child: 0  Id: close of type bool [line: 29]						.   .   .   Child: 0  Id: close of type bool [line: 29]
.   .   .   Child: 1  Op: and of type bool [line: 29]						.   .   .   Child: 1  Op: and of type bool [line: 29]
.   .   .   .   Child: 0  Op: < of type bool [line: 29]						.   .   .   .   Child: 0  Op: < of type bool [line: 29]
.   .   .   .   .   Child: 0  Op: + of type int [line: 29]					.   .   .   .   .   Child: 0  Op: + of type int [line: 29]
.   .   .   .   .   .   Child: 0  Op: * of type int [line: 29]					.   .   .   .   .   .   Child: 0  Op: * of type int [line: 29]
.   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 29]				.   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 29]
.   .   .   .   .   .   .   .   Child: 0  Const 1 of type int [line: 29]			.   .   .   .   .   .   .   .   Child: 0  Const 1 of type int [line: 29]
.   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 29]				.   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 29]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 29]				.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 29]
.   .   .   .   .   Child: 1  Op: * of type int [line: 29]					.   .   .   .   .   Child: 1  Op: * of type int [line: 29]
.   .   .   .   .   .   Child: 0  Const 4 of type int [line: 29]				.   .   .   .   .   .   Child: 0  Const 4 of type int [line: 29]
.   .   .   .   .   .   Child: 1  Const 5 of type int [line: 29]				.   .   .   .   .   .   Child: 1  Const 5 of type int [line: 29]
.   .   .   .   Child: 1  Op: > of type bool [line: 29]						.   .   .   .   Child: 1  Op: > of type bool [line: 29]
.   .   .   .   .   Child: 0  Op: + of type int [line: 29]					.   .   .   .   .   Child: 0  Op: + of type int [line: 29]
.   .   .   .   .   .   Child: 0  Const 6 of type int [line: 29]				.   .   .   .   .   .   Child: 0  Const 6 of type int [line: 29]
.   .   .   .   .   .   Child: 1  Const 7 of type int [line: 29]				.   .   .   .   .   .   Child: 1  Const 7 of type int [line: 29]
.   .   .   .   .   Child: 1  Op: chsign of type int [line: 29]					.   .   .   .   .   Child: 1  Op: chsign of type int [line: 29]
.   .   .   .   .   .   Child: 0  Const 3 of type int [line: 29]				.   .   .   .   .   .   Child: 0  Const 3 of type int [line: 29]
.   .   Sibling: 13  Assign: := of type bool [line: 30]						.   .   Sibling: 13  Assign: := of type bool [line: 30]
.   .   .   Child: 0  Id: shave of type bool [line: 30]						.   .   .   Child: 0  Id: shave of type bool [line: 30]
.   .   .   Child: 1  Op: or of type bool [line: 30]						.   .   .   Child: 1  Op: or of type bool [line: 30]
.   .   .   .   Child: 0  Const true of type bool [line: 30]					.   .   .   .   Child: 0  Const true of type bool [line: 30]
.   .   .   .   Child: 1  Op: and of type bool [line: 30]					.   .   .   .   Child: 1  Op: and of type bool [line: 30]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 30]					.   .   .   .   .   Child: 0  Op: < of type bool [line: 30]
.   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 30]				.   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 30]
.   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 30]				.   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 30]
.   .   .   .   .   .   .   .   Child: 0  Const 1 of type int [line: 30]			.   .   .   .   .   .   .   .   Child: 0  Const 1 of type int [line: 30]
.   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 30]				.   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 30]
.   .   .   .   .   .   .   .   .   Child: 0  Const 2 of type int [line: 30]			.   .   .   .   .   .   .   .   .   Child: 0  Const 2 of type int [line: 30]
.   .   .   .   .   .   .   .   .   Child: 1  Const 3 of type int [line: 30]			.   .   .   .   .   .   .   .   .   Child: 1  Const 3 of type int [line: 30]
.   .   .   .   .   .   Child: 1  Op: * of type int [line: 30]					.   .   .   .   .   .   Child: 1  Op: * of type int [line: 30]
.   .   .   .   .   .   .   Child: 0  Const 4 of type int [line: 30]				.   .   .   .   .   .   .   Child: 0  Const 4 of type int [line: 30]
.   .   .   .   .   .   .   Child: 1  Const 5 of type int [line: 30]				.   .   .   .   .   .   .   Child: 1  Const 5 of type int [line: 30]
.   .   .   .   .   Child: 1  Op: > of type bool [line: 30]					.   .   .   .   .   Child: 1  Op: > of type bool [line: 30]
.   .   .   .   .   .   Child: 0  Op: + of type int [line: 30]					.   .   .   .   .   .   Child: 0  Op: + of type int [line: 30]
.   .   .   .   .   .   .   Child: 0  Const 6 of type int [line: 30]				.   .   .   .   .   .   .   Child: 0  Const 6 of type int [line: 30]
.   .   .   .   .   .   .   Child: 1  Const 7 of type int [line: 30]				.   .   .   .   .   .   .   Child: 1  Const 7 of type int [line: 30]
.   .   .   .   .   .   Child: 1  Op: chsign of type int [line: 30]				.   .   .   .   .   .   Child: 1  Op: chsign of type int [line: 30]
.   .   .   .   .   .   .   Child: 0  Const 3 of type int [line: 30]				.   .   .   .   .   .   .   Child: 0  Const 3 of type int [line: 30]
.   .   Sibling: 14  If [line: 31]								.   .   Sibling: 14  If [line: 31]
.   .   .   Child: 0  Op: >< of type bool [line: 31]						.   .   .   Child: 0  Op: >< of type bool [line: 31]
.   .   .   .   Child: 0  Id: shave of type bool [line: 31]					.   .   .   .   Child: 0  Id: shave of type bool [line: 31]
.   .   .   .   Child: 1  Id: close of type bool [line: 31]					.   .   .   .   Child: 1  Id: close of type bool [line: 31]
.   .   .   Child: 1  Assign: := of type bool [line: 31]					.   .   .   Child: 1  Assign: := of type bool [line: 31]
.   .   .   .   Child: 0  Id: shave of type bool [line: 31]					.   .   .   .   Child: 0  Id: shave of type bool [line: 31]
.   .   .   .   Child: 1  Op: not of type bool [line: 31]					.   .   .   .   Child: 1  Op: not of type bool [line: 31]
.   .   .   .   .   Child: 0  Id: close of type bool [line: 31]					.   .   .   .   .   Child: 0  Id: close of type bool [line: 31]
.   .   Sibling: 15  If [line: 32]								.   .   Sibling: 15  If [line: 32]
.   .   .   Child: 0  Op: not of type bool [line: 32]						.   .   .   Child: 0  Op: not of type bool [line: 32]
.   .   .   .   Child: 0  Op: or of type bool [line: 32]					.   .   .   .   Child: 0  Op: or of type bool [line: 32]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 32]					.   .   .   .   .   Child: 0  Op: = of type bool [line: 32]
.   .   .   .   .   .   Child: 0  Id: shave of type bool [line: 32]				.   .   .   .   .   .   Child: 0  Id: shave of type bool [line: 32]
.   .   .   .   .   .   Child: 1  Id: close of type bool [line: 32]				.   .   .   .   .   .   Child: 1  Id: close of type bool [line: 32]
.   .   .   .   .   Child: 1  Op: not of type bool [line: 32]					.   .   .   .   .   Child: 1  Op: not of type bool [line: 32]
.   .   .   .   .   .   Child: 0  Id: close of type bool [line: 32]				.   .   .   .   .   .   Child: 0  Id: close of type bool [line: 32]
.   .   .   Child: 1  Assign: := of type bool [line: 32]					.   .   .   Child: 1  Assign: := of type bool [line: 32]
.   .   .   .   Child: 0  Id: shave of type bool [line: 32]					.   .   .   .   Child: 0  Id: shave of type bool [line: 32]
.   .   .   .   Child: 1  Const true of type bool [line: 32]					.   .   .   .   Child: 1  Const true of type bool [line: 32]
.   .   .   Child: 2  Assign: := of type bool [line: 33]					.   .   .   Child: 2  Assign: := of type bool [line: 33]
.   .   .   .   Child: 0  Id: close of type bool [line: 33]					.   .   .   .   Child: 0  Id: close of type bool [line: 33]
.   .   .   .   Child: 1  Const false of type bool [line: 33]					.   .   .   .   Child: 1  Const false of type bool [line: 33]
.   .   Sibling: 16  Assign: := of type int [line: 34]						.   .   Sibling: 16  Assign: := of type int [line: 34]
.   .   .   Child: 0  Id: mysteriousPenguin of type int [line: 34]				.   .   .   Child: 0  Id: mysteriousPenguin of type int [line: 34]
.   .   .   Child: 1  Op: chsign of type int [line: 34]						.   .   .   Child: 1  Op: chsign of type int [line: 34]
.   .   .   .   Child: 0  Op: - of type int [line: 34]						.   .   .   .   Child: 0  Op: - of type int [line: 34]
.   .   .   .   .   Child: 0  Op: chsign of type int [line: 34]					.   .   .   .   .   Child: 0  Op: chsign of type int [line: 34]
.   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 34]				.   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 34]
.   .   .   .   .   .   .   Child: 0  Const 8 of type int [line: 34]				.   .   .   .   .   .   .   Child: 0  Const 8 of type int [line: 34]
.   .   .   .   .   Child: 1  Op: chsign of type int [line: 34]					.   .   .   .   .   Child: 1  Op: chsign of type int [line: 34]
.   .   .   .   .   .   Child: 0  Assign: -- of type int [line: 34]				.   .   .   .   .   .   Child: 0  Assign: -- of type int [line: 34]
.   .   .   .   .   .   .   Child: 0  Id: cheese of type int [line: 34]				.   .   .   .   .   .   .   Child: 0  Id: cheese of type int [line: 34]
.   .   Sibling: 17  While [line: 36]								.   .   Sibling: 17  While [line: 36]
.   .   .   Child: 0  Id: shave of type bool [line: 36]						.   .   .   Child: 0  Id: shave of type bool [line: 36]
.   .   .   Child: 1  Compound [line: 36]							.   .   .   Child: 1  Compound [line: 36]
.   .   .   .   Child: 0  Var: were of type int [line: 37]					.   .   .   .   Child: 0  Var: were of type int [line: 37]
.   .   .   .   Sibling: 1  Var: rabbit of type int [line: 37]					.   .   .   .   Sibling: 1  Var: rabbit of type int [line: 37]
.   .   .   .   Sibling: 2  Var: sheep is array of type int [line: 38]				.   .   .   .   Sibling: 2  Var: sheep is array of type int [line: 38]
.   .   .   .   Child: 1  Assign: := of type int [line: 40]					.   .   .   .   Child: 1  Assign: := of type int [line: 40]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 40]					.   .   .   .   .   Child: 0  Op: [ of type int [line: 40]
.   .   .   .   .   .   Child: 0  Id: sheep of type int [line: 40]				.   .   .   .   .   .   Child: 0  Id: sheep of type int [line: 40]
.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 40]				.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 40]
.   .   .   .   .   Child: 1  Const 1618 of type int [line: 40]					.   .   .   .   .   Child: 1  Const 1618 of type int [line: 40]
.   .   .   .   Sibling: 1  If [line: 41]							.   .   .   .   Sibling: 1  If [line: 41]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 41]					.   .   .   .   .   Child: 0  Op: < of type bool [line: 41]
.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 41]					.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 41]
.   .   .   .   .   .   .   Child: 0  Id: sheep of type int [line: 41]				.   .   .   .   .   .   .   Child: 0  Id: sheep of type int [line: 41]
.   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 41]				.   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 41]
.   .   .   .   .   .   Child: 1  Const 496 of type int [line: 41]				.   .   .   .   .   .   Child: 1  Const 496 of type int [line: 41]
.   .   .   .   .   Child: 1  Break [line: 41]							.   .   .   .   .   Child: 1  Break [line: 41]
.   .   .   .   Sibling: 2  Call: wallace of type void [line: 42]				.   .   .   .   Sibling: 2  Call: wallace of type void [line: 42]
.   .   .   .   .   Child: 0  Assign: -- of type int [line: 42]					.   .   .   .   .   Child: 0  Assign: -- of type int [line: 42]
.   .   .   .   .   .   Child: 0  Id: gromit of type int [line: 42]				.   .   .   .   .   .   Child: 0  Id: gromit of type int [line: 42]
.   .   .   .   .   Sibling: 1  Op: - of type int [line: 42]					.   .   .   .   .   Sibling: 1  Op: - of type int [line: 42]
.   .   .   .   .   .   Child: 0  Id: were of type int [line: 42]				.   .   .   .   .   .   Child: 0  Id: were of type int [line: 42]
.   .   .   .   .   .   Child: 1  Id: rabbit of type int [line: 42]				.   .   .   .   .   .   Child: 1  Id: rabbit of type int [line: 42]
.   .   .   .   Sibling: 3  Compound [line: 43]							.   .   .   .   Sibling: 3  Compound [line: 43]
.   .   .   .   .   Child: 0  Var: the of type int [line: 44]					.   .   .   .   .   Child: 0  Var: the of type int [line: 44]
.   .   .   .   .   Sibling: 1  Var: wrong of type int [line: 44]				.   .   .   .   .   Sibling: 1  Var: wrong of type int [line: 44]
.   .   .   .   .   Sibling: 2  Var: trousers of type int [line: 44]				.   .   .   .   .   Sibling: 2  Var: trousers of type int [line: 44]
.   .   .   .   .   Child: 1  Assign: := of type int [line: 46]					.   .   .   .   .   Child: 1  Assign: := of type int [line: 46]
.   .   .   .   .   .   Child: 0  Id: the of type int [line: 46]				.   .   .   .   .   .   Child: 0  Id: the of type int [line: 46]
.   .   .   .   .   .   Child: 1  Assign: += of type int [line: 46]				.   .   .   .   .   .   Child: 1  Assign: += of type int [line: 46]
.   .   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 46]				.   .   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 46]
.   .   .   .   .   .   .   Child: 1  Assign: ++ of type int [line: 46]				.   .   .   .   .   .   .   Child: 1  Assign: ++ of type int [line: 46]
.   .   .   .   .   .   .   .   Child: 0  Id: trousers of type int [line: 46]			.   .   .   .   .   .   .   .   Child: 0  Id: trousers of type int [line: 46]
.   .   .   .   .   Sibling: 1  If [line: 47]							.   .   .   .   .   Sibling: 1  If [line: 47]
.   .   .   .   .   .   Child: 0  Op: = of type bool [line: 47]					.   .   .   .   .   .   Child: 0  Op: = of type bool [line: 47]
.   .   .   .   .   .   .   Child: 0  Id: were of type int [line: 47]				.   .   .   .   .   .   .   Child: 0  Id: were of type int [line: 47]
.   .   .   .   .   .   .   Child: 1  Id: rabbit of type int [line: 47]				.   .   .   .   .   .   .   Child: 1  Id: rabbit of type int [line: 47]
.   .   .   .   .   .   Child: 1  Assign: := of type int [line: 47]				.   .   .   .   .   .   Child: 1  Assign: := of type int [line: 47]
.   .   .   .   .   .   .   Child: 0  Id: were of type int [line: 47]				.   .   .   .   .   .   .   Child: 0  Id: were of type int [line: 47]
.   .   .   .   .   .   .   Child: 1  Assign: -- of type int [line: 47]				.   .   .   .   .   .   .   Child: 1  Assign: -- of type int [line: 47]
.   .   .   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 47]			.   .   .   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 47]
.   .   Sibling: 18  Return [line: 50]								.   .   Sibling: 18  Return [line: 50]
Sibling: 3  Func: penguin returns type bool [line: 54]						Sibling: 3  Func: penguin returns type bool [line: 54]
.   Child: 0  Parm: Feathers of type char [line: 54]						.   Child: 0  Parm: Feathers of type char [line: 54]
.   Sibling: 1  Parm: McGraw is array of type char [line: 54]					.   Sibling: 1  Parm: McGraw is array of type char [line: 54]
.   Sibling: 2  Parm: moon of type bool [line: 54]						.   Sibling: 2  Parm: moon of type bool [line: 54]
.   Sibling: 3  Parm: cheese of type bool [line: 54]						.   Sibling: 3  Parm: cheese of type bool [line: 54]
.   Sibling: 4  Parm: launch of type int [line: 54]						.   Sibling: 4  Parm: launch of type int [line: 54]
.   Child: 1  Compound [line: 55]								.   Child: 1  Compound [line: 55]
.   .   Child: 0  Var: tottington of type char [line: 56]					.   .   Child: 0  Var: tottington of type char [line: 56]
.   .   .   Child: 0  Const 'x' of type char [line: 56]						.   .   .   Child: 0  Const 'x' of type char [line: 56]
.   .   Sibling: 1  Var: Wensleydale is array of type char [line: 57]				.   .   Sibling: 1  Var: Wensleydale is array of type char [line: 57]
.   .   Sibling: 2  Var: c of type char [line: 58]						.   .   Sibling: 2  Var: c of type char [line: 58]
.   .   Sibling: 3  Var: i of type int [line: 59]						.   .   Sibling: 3  Var: i of type int [line: 59]
.   .   Child: 1  Assign: := of type char [line: 61]						.   .   Child: 1  Assign: := of type char [line: 61]
.   .   .   Child: 0  Id: tottington of type char [line: 61]					.   .   .   Child: 0  Id: tottington of type char [line: 61]
.   .   .   Child: 1  Id: Feathers of type char [line: 61]					.   .   .   Child: 1  Id: Feathers of type char [line: 61]
.   .   Sibling: 1  Assign: := of type bool [line: 62]						.   .   Sibling: 1  Assign: := of type bool [line: 62]
.   .   .   Child: 0  Id: moon of type bool [line: 62]						.   .   .   Child: 0  Id: moon of type bool [line: 62]
.   .   .   Child: 1  Op: and of type bool [line: 62]						.   .   .   Child: 1  Op: and of type bool [line: 62]
.   .   .   .   Child: 0  Op: <= of type bool [line: 62]					.   .   .   .   Child: 0  Op: <= of type bool [line: 62]
.   .   .   .   .   Child: 0  Id: McGraw of type char [line: 62]				.   .   .   .   .   Child: 0  Id: McGraw of type char [line: 62]
.   .   .   .   .   Child: 1  Id: Wensleydale of type char [line: 62]				.   .   .   .   .   Child: 1  Id: Wensleydale of type char [line: 62]
.   .   .   .   Child: 1  Id: moon of type bool [line: 62]					.   .   .   .   Child: 1  Id: moon of type bool [line: 62]
.   .   Sibling: 2  Assign: := of type char [line: 63]						.   .   Sibling: 2  Assign: := of type char [line: 63]
.   .   .   Child: 0  Id: Wensleydale of type char [line: 63]					.   .   .   Child: 0  Id: Wensleydale of type char [line: 63]
.   .   .   Child: 1  Id: McGraw of type char [line: 63]					.   .   .   Child: 1  Id: McGraw of type char [line: 63]
.   .   Sibling: 3  Assign: := of type char [line: 64]						.   .   Sibling: 3  Assign: := of type char [line: 64]
.   .   .   Child: 0  Op: [ of type char [line: 64]						.   .   .   Child: 0  Op: [ of type char [line: 64]
.   .   .   .   Child: 0  Id: Wensleydale of type char [line: 64]				.   .   .   .   Child: 0  Id: Wensleydale of type char [line: 64]
.   .   .   .   Child: 1  Op: sizeof of type int [line: 64]					.   .   .   .   Child: 1  Op: sizeof of type int [line: 64]
.   .   .   .   .   Child: 0  Id: McGraw of type char [line: 64]				.   .   .   .   .   Child: 0  Id: McGraw of type char [line: 64]
.   .   .   Child: 1  Const 'Q' of type char [line: 64]						.   .   .   Child: 1  Const 'Q' of type char [line: 64]
.   .   Sibling: 4  Assign: := of type char [line: 65]						.   .   Sibling: 4  Assign: := of type char [line: 65]
.   .   .   Child: 0  Op: [ of type char [line: 65]						.   .   .   Child: 0  Op: [ of type char [line: 65]
.   .   .   .   Child: 0  Id: McGraw of type char [line: 65]					.   .   .   .   Child: 0  Id: McGraw of type char [line: 65]
.   .   .   .   Child: 1  Const 3 of type int [line: 65]					.   .   .   .   Child: 1  Const 3 of type int [line: 65]
.   .   .   Child: 1  Const 'A' of type char [line: 65]						.   .   .   Child: 1  Const 'A' of type char [line: 65]
Sibling: 4  Func: Wendolene returns type int [line: 68]						Sibling: 4  Func: Wendolene returns type int [line: 68]
.   Child: 0  Parm: wool of type int [line: 68]							.   Child: 0  Parm: wool of type int [line: 68]
.   Sibling: 1  Parm: shaun of type bool [line: 68]						.   Sibling: 1  Parm: shaun of type bool [line: 68]
.   Sibling: 2  Parm: yarn is array of type int [line: 68]					.   Sibling: 2  Parm: yarn is array of type int [line: 68]
.   Sibling: 3  Parm: preston is array of type bool [line: 68]					.   Sibling: 3  Parm: preston is array of type bool [line: 68]
.   Child: 1  Compound [line: 69]								.   Child: 1  Compound [line: 69]
.   .   Child: 0  Var: skein of type int [line: 70]						.   .   Child: 0  Var: skein of type int [line: 70]
.   .   Child: 1  Assign: := of type bool [line: 71]						.   .   Child: 1  Assign: := of type bool [line: 71]
.   .   .   Child: 0  Op: [ of type bool [line: 71]						.   .   .   Child: 0  Op: [ of type bool [line: 71]
.   .   .   .   Child: 0  Id: preston of type bool [line: 71]					.   .   .   .   Child: 0  Id: preston of type bool [line: 71]
.   .   .   .   Child: 1  Const 3 of type int [line: 71]					.   .   .   .   Child: 1  Const 3 of type int [line: 71]
.   .   .   Child: 1  Op: or of type bool [line: 71]						.   .   .   Child: 1  Op: or of type bool [line: 71]
.   .   .   .   Child: 0  Op: > of type bool [line: 71]						.   .   .   .   Child: 0  Op: > of type bool [line: 71]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 71]					.   .   .   .   .   Child: 0  Op: [ of type int [line: 71]
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 71]				.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 71]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 71]				.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 71]
.   .   .   .   .   Child: 1  Id: wool of type int [line: 71]					.   .   .   .   .   Child: 1  Id: wool of type int [line: 71]
.   .   .   .   Child: 1  Op: not of type bool [line: 71]					.   .   .   .   Child: 1  Op: not of type bool [line: 71]
.   .   .   .   .   Child: 0  Id: shaun of type bool [line: 71]					.   .   .   .   .   Child: 0  Id: shaun of type bool [line: 71]
.   .   Sibling: 1  Return [line: 72]								.   .   Sibling: 1  Return [line: 72]
.   .   .   Child: 0  Op: + of type int [line: 72]						.   .   .   Child: 0  Op: + of type int [line: 72]
.   .   .   .   Child: 0  Op: + of type int [line: 72]						.   .   .   .   Child: 0  Op: + of type int [line: 72]
.   .   .   .   .   Child: 0  Op: + of type int [line: 72]					.   .   .   .   .   Child: 0  Op: + of type int [line: 72]
.   .   .   .   .   .   Child: 0  Op: + of type int [line: 72]					.   .   .   .   .   .   Child: 0  Op: + of type int [line: 72]
.   .   .   .   .   .   .   Child: 0  Id: wool of type int [line: 72]				.   .   .   .   .   .   .   Child: 0  Id: wool of type int [line: 72]
.   .   .   .   .   .   .   Child: 1  Op: [ of type int [line: 72]				.   .   .   .   .   .   .   Child: 1  Op: [ of type int [line: 72]
.   .   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]			.   .   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]
.   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 72]			.   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 72]
.   .   .   .   .   .   Child: 1  Op: sizeof of type int [line: 72]				.   .   .   .   .   .   Child: 1  Op: sizeof of type int [line: 72]
.   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]				.   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]
.   .   .   .   .   Child: 1  Op: [ of type int [line: 72]					.   .   .   .   .   Child: 1  Op: [ of type int [line: 72]
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]				.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]
.   .   .   .   .   .   Child: 1  Op: * of type int [line: 72]					.   .   .   .   .   .   Child: 1  Op: * of type int [line: 72]
.   .   .   .   .   .   .   Child: 0  Const 7 of type int [line: 72]				.   .   .   .   .   .   .   Child: 0  Const 7 of type int [line: 72]
.   .   .   .   .   .   .   Child: 1  Id: wool of type int [line: 72]				.   .   .   .   .   .   .   Child: 1  Id: wool of type int [line: 72]
.   .   .   .   Child: 1  Op: [ of type int [line: 72]						.   .   .   .   Child: 1  Op: [ of type int [line: 72]
.   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]					.   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]
.   .   .   .   .   Child: 1  Op: - of type int [line: 72]					.   .   .   .   .   Child: 1  Op: - of type int [line: 72]
.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 72]					.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 72]
.   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]				.   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]
.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 72]				.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 72]
.   .   .   .   .   .   .   .   Child: 0  Const 3 of type int [line: 72]			.   .   .   .   .   .   .   .   Child: 0  Const 3 of type int [line: 72]
.   .   .   .   .   .   .   .   Child: 1  Op: * of type int [line: 72]				.   .   .   .   .   .   .   .   Child: 1  Op: * of type int [line: 72]
.   .   .   .   .   .   .   .   .   Child: 0  Id: wool of type int [line: 72]			.   .   .   .   .   .   .   .   .   Child: 0  Id: wool of type int [line: 72]
.   .   .   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 72]			.   .   .   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 72]
.   .   .   .   .   .   Child: 1  Const 4 of type int [line: 72]				.   .   .   .   .   .   Child: 1  Const 4 of type int [line: 72]
Sibling: 5  Func: ramsBottom returns type bool [line: 76]					Sibling: 5  Func: ramsBottom returns type bool [line: 76]
.   Child: 1  Compound [line: 77]								.   Child: 1  Compound [line: 77]
.   .   Child: 0  Var: chicken is array of type int [line: 78]					.   .   Child: 0  Var: chicken is array of type int [line: 78]
.   .   Sibling: 1  Var: run is array of type bool [line: 79]					.   .   Sibling: 1  Var: run is array of type bool [line: 79]
.   .   Sibling: 2  Var: wallace is array of type int [line: 80]				.   .   Sibling: 2  Var: wallace is array of type int [line: 80]
.   .   Sibling: 3  Var: gromit is array of type int [line: 80]					.   .   Sibling: 3  Var: gromit is array of type int [line: 80]
.   .   Child: 1  Op: * of type int [line: 82]							.   .   Child: 1  Op: * of type int [line: 82]
.   .   .   Child: 0  Const 42 of type int [line: 82]						.   .   .   Child: 0  Const 42 of type int [line: 82]
.   .   .   Child: 1  Call: Wendolene of type int [line: 82]					.   .   .   Child: 1  Call: Wendolene of type int [line: 82]
.   .   .   .   Child: 0  Op: + of type int [line: 82]						.   .   .   .   Child: 0  Op: + of type int [line: 82]
.   .   .   .   .   Child: 0  Op: + of type int [line: 82]					.   .   .   .   .   Child: 0  Op: + of type int [line: 82]
.   .   .   .   .   .   Child: 0  Const 1 of type int [line: 82]				.   .   .   .   .   .   Child: 0  Const 1 of type int [line: 82]
.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 82]				.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 82]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 82]					.   .   .   .   .   Child: 1  Const 3 of type int [line: 82]
.   .   .   .   Sibling: 1  Op: or of type bool [line: 82]					.   .   .   .   Sibling: 1  Op: or of type bool [line: 82]
.   .   .   .   .   Child: 0  Op: not of type bool [line: 82]					.   .   .   .   .   Child: 0  Op: not of type bool [line: 82]
.   .   .   .   .   .   Child: 0  Const true of type bool [line: 82]				.   .   .   .   .   .   Child: 0  Const true of type bool [line: 82]
.   .   .   .   .   Child: 1  Op: and of type bool [line: 82]					.   .   .   .   .   Child: 1  Op: and of type bool [line: 82]
.   .   .   .   .   .   Child: 0  Const true of type bool [line: 82]				.   .   .   .   .   .   Child: 0  Const true of type bool [line: 82]
.   .   .   .   .   .   Child: 1  Const false of type bool [line: 82]				.   .   .   .   .   .   Child: 1  Const false of type bool [line: 82]
.   .   .   .   Sibling: 2  Id: chicken of type int [line: 82]					.   .   .   .   Sibling: 2  Id: chicken of type int [line: 82]
.   .   .   .   Sibling: 3  Id: run of type bool [line: 82]					.   .   .   .   Sibling: 3  Id: run of type bool [line: 82]
.   .   Sibling: 1  Op: [ of type bool [line: 83]						.   .   Sibling: 1  Op: [ of type bool [line: 83]
.   .   .   Child: 0  Id: run of type bool [line: 83]						.   .   .   Child: 0  Id: run of type bool [line: 83]
.   .   .   Child: 1  Op: - of type int [line: 83]						.   .   .   Child: 1  Op: - of type int [line: 83]
.   .   .   .   Child: 0  Op: sizeof of type int [line: 83]					.   .   .   .   Child: 0  Op: sizeof of type int [line: 83]
.   .   .   .   .   Child: 0  Id: run of type bool [line: 83]					.   .   .   .   .   Child: 0  Id: run of type bool [line: 83]
.   .   .   .   Child: 1  Const 1 of type int [line: 83]					.   .   .   .   Child: 1  Const 1 of type int [line: 83]
.   .   Sibling: 2  Return [line: 85]								.   .   Sibling: 2  Return [line: 85]
.   .   .   Child: 0  Op: not of type bool [line: 85]						.   .   .   Child: 0  Op: not of type bool [line: 85]
.   .   .   .   Child: 0  Op: >= of type bool [line: 85]					.   .   .   .   Child: 0  Op: >= of type bool [line: 85]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 85]					.   .   .   .   .   Child: 0  Op: [ of type int [line: 85]
.   .   .   .   .   .   Child: 0  Id: wallace of type int [line: 85]				.   .   .   .   .   .   Child: 0  Id: wallace of type int [line: 85]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 85]				.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 85]
.   .   .   .   .   Child: 1  Op: * of type int [line: 85]					.   .   .   .   .   Child: 1  Op: * of type int [line: 85]
.   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 85]				.   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 85]
.   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 85]				.   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 85]
.   .   .   .   .   .   .   .   Child: 0  Id: gromit of type int [line: 85]			.   .   .   .   .   .   .   .   Child: 0  Id: gromit of type int [line: 85]
.   .   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 85]			.   .   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 85]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 85]				.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 85]
Sibling: 6  Func: cheese returns type int [line: 88]						Sibling: 6  Func: cheese returns type int [line: 88]
.   Child: 0  Parm: x of type int [line: 88]							.   Child: 0  Parm: x of type int [line: 88]
.   Sibling: 1  Parm: y of type int [line: 88]							.   Sibling: 1  Parm: y of type int [line: 88]
.   Child: 1  Compound [line: 88]								.   Child: 1  Compound [line: 88]
.   .   Child: 1  While [line: 88]								.   .   Child: 1  While [line: 88]
.   .   .   Child: 0  Op: > of type bool [line: 88]						.   .   .   Child: 0  Op: > of type bool [line: 88]
.   .   .   .   Child: 0  Id: x of type int [line: 88]						.   .   .   .   Child: 0  Id: x of type int [line: 88]
.   .   .   .   Child: 1  Const 0 of type int [line: 88]					.   .   .   .   Child: 1  Const 0 of type int [line: 88]
.   .   .   Child: 1  If [line: 88]								.   .   .   Child: 1  If [line: 88]
.   .   .   .   Child: 0  Op: > of type bool [line: 88]						.   .   .   .   Child: 0  Op: > of type bool [line: 88]
.   .   .   .   .   Child: 0  Id: y of type int [line: 88]					.   .   .   .   .   Child: 0  Id: y of type int [line: 88]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 88]					.   .   .   .   .   Child: 1  Const 3 of type int [line: 88]
.   .   .   .   Child: 1  Assign: -- of type int [line: 88]					.   .   .   .   Child: 1  Assign: -- of type int [line: 88]
.   .   .   .   .   Child: 0  Id: x of type int [line: 88]					.   .   .   .   .   Child: 0  Id: x of type int [line: 88]
.   .   .   .   Child: 2  Return [line: 88]							.   .   .   .   Child: 2  Return [line: 88]
.   .   .   .   .   Child: 0  Op: % of type int [line: 88]					.   .   .   .   .   Child: 0  Op: % of type int [line: 88]
.   .   .   .   .   .   Child: 0  Op: * of type int [line: 88]					.   .   .   .   .   .   Child: 0  Op: * of type int [line: 88]
.   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 88]				.   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 88]
.   .   .   .   .   .   .   Child: 1  Id: x of type int [line: 88]				.   .   .   .   .   .   .   Child: 1  Id: x of type int [line: 88]
.   .   .   .   .   .   Child: 1  Id: y of type int [line: 88]					.   .   .   .   .   .   Child: 1  Id: y of type int [line: 88]
Sibling: 7  Func: Wensleydale returns type int [line: 90]					Sibling: 7  Func: Wensleydale returns type int [line: 90]
.   Child: 0  Parm: x of type int [line: 90]							.   Child: 0  Parm: x of type int [line: 90]
.   Sibling: 1  Parm: y of type int [line: 90]							.   Sibling: 1  Parm: y of type int [line: 90]
.   Child: 1  Compound [line: 90]								.   Child: 1  Compound [line: 90]
.   .   Child: 1  Return [line: 90]								.   .   Child: 1  Return [line: 90]
.   .   .   Child: 0  Call: cheese of type int [line: 90]					.   .   .   Child: 0  Call: cheese of type int [line: 90]
.   .   .   .   Child: 0  Id: x of type int [line: 90]						.   .   .   .   Child: 0  Id: x of type int [line: 90]
.   .   .   .   Sibling: 1  Id: gromit of type int [line: 90]					.   .   .   .   Sibling: 1  Id: gromit of type int [line: 90]
Sibling: 8  Func: LadyCampanula returns type int [line: 92]					Sibling: 8  Func: LadyCampanula returns type int [line: 92]
.   Child: 0  Parm: c of type char [line: 92]							.   Child: 0  Parm: c of type char [line: 92]
.   Sibling: 1  Parm: s is array of type char [line: 92]					.   Sibling: 1  Parm: s is array of type char [line: 92]
.   Child: 1  Compound [line: 92]								.   Child: 1  Compound [line: 92]
.   .   Child: 1  While [line: 92]								.   .   Child: 1  While [line: 92]
.   .   .   Child: 0  Const true of type bool [line: 92]					.   .   .   Child: 0  Const true of type bool [line: 92]
.   .   .   Child: 1  For [line: 92]								.   .   .   Child: 1  For [line: 92]
.   .   .   .   Child: 0  Var: i of type int [line: 92]						.   .   .   .   Child: 0  Var: i of type int [line: 92]
.   .   .   .   Child: 1  Range [line: 92]							.   .   .   .   Child: 1  Range [line: 92]
.   .   .   .   .   Child: 0  Op: - of undefined type [line: 92]				.   .   .   .   .   Child: 0  Op: - of undefined type [line: 92]
.   .   .   .   .   .   Child: 0  Op: sizeof of undefined type [line: 92]			.   .   .   .   .   .   Child: 0  Op: sizeof of undefined type [line: 92]
.   .   .   .   .   .   .   Child: 0  Id: s of undefined type [line: 92]		      |	.   .   .   .   .   .   .   Child: 0  Id: s of type char [line: 92]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 92]				.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 92]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 92]					.   .   .   .   .   Child: 1  Const 0 of type int [line: 92]
.   .   .   .   .   Child: 2  Op: chsign of undefined type [line: 92]				.   .   .   .   .   Child: 2  Op: chsign of undefined type [line: 92]
.   .   .   .   .   .   Child: 0  Const 1 of type int [line: 92]				.   .   .   .   .   .   Child: 0  Const 1 of type int [line: 92]
.   .   .   .   Child: 2  If [line: 92]								.   .   .   .   Child: 2  If [line: 92]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 92]					.   .   .   .   .   Child: 0  Op: = of type bool [line: 92]
.   .   .   .   .   .   Child: 0  Op: [ of type char [line: 92]					.   .   .   .   .   .   Child: 0  Op: [ of type char [line: 92]
.   .   .   .   .   .   .   Child: 0  Id: s of type char [line: 92]				.   .   .   .   .   .   .   Child: 0  Id: s of type char [line: 92]
.   .   .   .   .   .   .   Child: 1  Id: i of type int [line: 92]				.   .   .   .   .   .   .   Child: 1  Id: i of type int [line: 92]
.   .   .   .   .   .   Child: 1  Id: c of type char [line: 92]					.   .   .   .   .   .   Child: 1  Id: c of type char [line: 92]
.   .   .   .   .   Child: 1  Return [line: 92]							.   .   .   .   .   Child: 1  Return [line: 92]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 92]					.   .   .   .   .   .   Child: 0  Id: i of type int [line: 92]
Sibling: 9  Func: MrsTweedy returns type char [line: 95]					Sibling: 9  Func: MrsTweedy returns type char [line: 95]
.   Child: 0  Parm: c of type char [line: 95]							.   Child: 0  Parm: c of type char [line: 95]
.   Sibling: 1  Parm: s is array of type char [line: 95]					.   Sibling: 1  Parm: s is array of type char [line: 95]
.   Child: 1  Compound [line: 96]								.   Child: 1  Compound [line: 96]
.   .   Child: 1  For [line: 97]								.   .   Child: 1  For [line: 97]
.   .   .   Child: 0  Var: ginger of type int [line: 97]					.   .   .   Child: 0  Var: ginger of type int [line: 97]
.   .   .   Child: 1  Range [line: 97]								.   .   .   Child: 1  Range [line: 97]
.   .   .   .   Child: 0  Const 0 of type int [line: 97]					.   .   .   .   Child: 0  Const 0 of type int [line: 97]
.   .   .   .   Child: 1  Const 10 of type int [line: 97]					.   .   .   .   Child: 1  Const 10 of type int [line: 97]
.   .   .   Child: 2  Assign: := of type char [line: 97]					.   .   .   Child: 2  Assign: := of type char [line: 97]
.   .   .   .   Child: 0  Op: [ of type char [line: 97]						.   .   .   .   Child: 0  Op: [ of type char [line: 97]
.   .   .   .   .   Child: 0  Id: s of type char [line: 97]					.   .   .   .   .   Child: 0  Id: s of type char [line: 97]
.   .   .   .   .   Child: 1  Id: ginger of type int [line: 97]					.   .   .   .   .   Child: 1  Id: ginger of type int [line: 97]
.   .   .   .   Child: 1  Id: c of type char [line: 97]						.   .   .   .   Child: 1  Id: c of type char [line: 97]
.   .   Sibling: 1  For [line: 98]								.   .   Sibling: 1  For [line: 98]
.   .   .   Child: 0  Var: pastry of type int [line: 98]					.   .   .   Child: 0  Var: pastry of type int [line: 98]
.   .   .   Child: 1  Range [line: 98]								.   .   .   Child: 1  Range [line: 98]
.   .   .   .   Child: 0  Const 0 of type int [line: 98]					.   .   .   .   Child: 0  Const 0 of type int [line: 98]
.   .   .   .   Child: 1  Const 2 of type int [line: 98]					.   .   .   .   Child: 1  Const 2 of type int [line: 98]
.   .   .   .   Child: 2  Const 7 of type int [line: 98]					.   .   .   .   Child: 2  Const 7 of type int [line: 98]
.   .   .   Child: 2  If [line: 98]								.   .   .   Child: 2  If [line: 98]
.   .   .   .   Child: 0  Op: = of type bool [line: 98]						.   .   .   .   Child: 0  Op: = of type bool [line: 98]
.   .   .   .   .   Child: 0  Op: [ of type char [line: 98]					.   .   .   .   .   Child: 0  Op: [ of type char [line: 98]
.   .   .   .   .   .   Child: 0  Id: s of type char [line: 98]					.   .   .   .   .   .   Child: 0  Id: s of type char [line: 98]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 98]				.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 98]
.   .   .   .   .   Child: 1  Op: [ of type char [line: 98]					.   .   .   .   .   Child: 1  Op: [ of type char [line: 98]
.   .   .   .   .   .   Child: 0  Id: s of type char [line: 98]					.   .   .   .   .   .   Child: 0  Id: s of type char [line: 98]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 98]				.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 98]
.   .   .   .   Child: 1  Break [line: 98]							.   .   .   .   Child: 1  Break [line: 98]
.   .   Sibling: 2  While [line: 99]								.   .   Sibling: 2  While [line: 99]
.   .   .   Child: 0  Const true of type bool [line: 99]					.   .   .   Child: 0  Const true of type bool [line: 99]
.   .   .   Child: 1  Break [line: 99]								.   .   .   Child: 1  Break [line: 99]
.   .   Sibling: 3  Return [line: 101]								.   .   Sibling: 3  Return [line: 101]
.   .   .   Child: 0  Const 'x' of type char [line: 101]					.   .   .   Child: 0  Const 'x' of type char [line: 101]
Sibling: 10  Func: TheWereRabbit returns type char [line: 104]					Sibling: 10  Func: TheWereRabbit returns type char [line: 104]
.   Child: 0  Parm: x of type int [line: 104]							.   Child: 0  Parm: x of type int [line: 104]
.   Child: 1  Compound [line: 105]								.   Child: 1  Compound [line: 105]
.   .   Child: 1  If [line: 106]								.   .   Child: 1  If [line: 106]
.   .   .   Child: 0  Op: = of type bool [line: 106]						.   .   .   Child: 0  Op: = of type bool [line: 106]
.   .   .   .   Child: 0  Id: x of type int [line: 106]						.   .   .   .   Child: 0  Id: x of type int [line: 106]
.   .   .   .   Child: 1  Const 0 of type int [line: 106]					.   .   .   .   Child: 1  Const 0 of type int [line: 106]
.   .   .   Child: 1  Return [line: 106]							.   .   .   Child: 1  Return [line: 106]
.   .   .   .   Child: 0  Const '@' of type char [line: 106]					.   .   .   .   Child: 0  Const '@' of type char [line: 106]
.   .   .   Child: 2  If [line: 107]								.   .   .   Child: 2  If [line: 107]
.   .   .   .   Child: 0  Op: = of type bool [line: 107]					.   .   .   .   Child: 0  Op: = of type bool [line: 107]
.   .   .   .   .   Child: 0  Id: x of type int [line: 107]					.   .   .   .   .   Child: 0  Id: x of type int [line: 107]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 107]					.   .   .   .   .   Child: 1  Const 1 of type int [line: 107]
.   .   .   .   Child: 1  Return [line: 107]							.   .   .   .   Child: 1  Return [line: 107]
.   .   .   .   .   Child: 0  Const 'a' of type char [line: 107]				.   .   .   .   .   Child: 0  Const 'a' of type char [line: 107]
.   .   .   .   Child: 2  If [line: 108]							.   .   .   .   Child: 2  If [line: 108]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 108]					.   .   .   .   .   Child: 0  Op: = of type bool [line: 108]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 108]					.   .   .   .   .   .   Child: 0  Id: x of type int [line: 108]
.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 108]				.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 108]
.   .   .   .   .   Child: 1  Return [line: 108]						.   .   .   .   .   Child: 1  Return [line: 108]
.   .   .   .   .   .   Child: 0  Const 'b' of type char [line: 108]				.   .   .   .   .   .   Child: 0  Const 'b' of type char [line: 108]
.   .   .   .   .   Child: 2  If [line: 109]							.   .   .   .   .   Child: 2  If [line: 109]
.   .   .   .   .   .   Child: 0  Op: = of type bool [line: 109]				.   .   .   .   .   .   Child: 0  Op: = of type bool [line: 109]
.   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 109]				.   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 109]
.   .   .   .   .   .   .   Child: 1  Const 3 of type int [line: 109]				.   .   .   .   .   .   .   Child: 1  Const 3 of type int [line: 109]
.   .   .   .   .   .   Child: 1  Return [line: 109]						.   .   .   .   .   .   Child: 1  Return [line: 109]
.   .   .   .   .   .   .   Child: 0  Const 'c' of type char [line: 109]			.   .   .   .   .   .   .   Child: 0  Const 'c' of type char [line: 109]
.   .   .   .   .   .   Child: 2  If [line: 110]						.   .   .   .   .   .   Child: 2  If [line: 110]
.   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 110]				.   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 110]
.   .   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 110]				.   .   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 110]
.   .   .   .   .   .   .   .   Child: 1  Const 4 of type int [line: 110]			.   .   .   .   .   .   .   .   Child: 1  Const 4 of type int [line: 110]
.   .   .   .   .   .   .   Child: 1  Return [line: 110]					.   .   .   .   .   .   .   Child: 1  Return [line: 110]
.   .   .   .   .   .   .   .   Child: 0  Const 'd' of type char [line: 110]			.   .   .   .   .   .   .   .   Child: 0  Const 'd' of type char [line: 110]
.   .   .   .   .   .   .   Child: 2  Return [line: 111]					.   .   .   .   .   .   .   Child: 2  Return [line: 111]
.   .   .   .   .   .   .   .   Child: 0  Const ' ' of type char [line: 111]		      |	.   .   .   .   .   .   .   .   Child: 0  Const '' of type char [line: 111]
Sibling: 11  Func: main returns type int [line: 114]						Sibling: 11  Func: main returns type int [line: 114]
.   Child: 1  Compound [line: 115]								.   Child: 1  Compound [line: 115]
.   .   Child: 0  Var: wool of type int [line: 116]						.   .   Child: 0  Var: wool of type int [line: 116]
.   .   Sibling: 1  Var: yarn is array of type int [line: 116]					.   .   Sibling: 1  Var: yarn is array of type int [line: 116]
.   .   Sibling: 2  Var: shaun of type bool [line: 117]						.   .   Sibling: 2  Var: shaun of type bool [line: 117]
.   .   Sibling: 3  Var: preston is array of type bool [line: 117]				.   .   Sibling: 3  Var: preston is array of type bool [line: 117]
.   .   Sibling: 4  Var: rocky is array of type char [line: 118]				.   .   Sibling: 4  Var: rocky is array of type char [line: 118]
.   .   Child: 1  Call: wallace of type void [line: 120]					.   .   Child: 1  Call: wallace of type void [line: 120]
.   .   .   Child: 0  Call: cheese of type int [line: 120]					.   .   .   Child: 0  Call: cheese of type int [line: 120]
.   .   .   .   Child: 0  Const 62 of type int [line: 120]					.   .   .   .   Child: 0  Const 62 of type int [line: 120]
.   .   .   .   Sibling: 1  Op: chsign of type int [line: 120]					.   .   .   .   Sibling: 1  Op: chsign of type int [line: 120]
.   .   .   .   .   Child: 0  Const 311 of type int [line: 120]					.   .   .   .   .   Child: 0  Const 311 of type int [line: 120]
.   .   .   Sibling: 1  Id: gromit of type int [line: 120]					.   .   .   Sibling: 1  Id: gromit of type int [line: 120]
.   .   Sibling: 1  Assign: := of type char [line: 121]						.   .   Sibling: 1  Assign: := of type char [line: 121]
.   .   .   Child: 0  Id: rocky of type char [line: 121]					.   .   .   Child: 0  Id: rocky of type char [line: 121]
.   .   .   Child: 1  Const is array "molybdenum" of type char [line: 121]			.   .   .   Child: 1  Const is array "molybdenum" of type char [line: 121]
.   .   Sibling: 2  Call: MrsTweedy of type char [line: 123]					.   .   Sibling: 2  Call: MrsTweedy of type char [line: 123]
.   .   .   Child: 0  Const 'Z' of type char [line: 123]					.   .   .   Child: 0  Const 'Z' of type char [line: 123]
.   .   .   Sibling: 1  Id: rocky of type char [line: 123]					.   .   .   Sibling: 1  Id: rocky of type char [line: 123]
.   .   Sibling: 3  Op: + of type int [line: 125]						.   .   Sibling: 3  Op: + of type int [line: 125]
.   .   .   Child: 0  Op: [ of type int [line: 125]						.   .   .   Child: 0  Op: [ of type int [line: 125]
.   .   .   .   Child: 0  Id: yarn of type int [line: 125]					.   .   .   .   Child: 0  Id: yarn of type int [line: 125]
.   .   .   .   Child: 1  Op: ? of type int [line: 125]						.   .   .   .   Child: 1  Op: ? of type int [line: 125]
.   .   .   .   .   Child: 0  Const 100 of type int [line: 125]					.   .   .   .   .   Child: 0  Const 100 of type int [line: 125]
.   .   .   Child: 1  Op: [ of type int [line: 125]						.   .   .   Child: 1  Op: [ of type int [line: 125]
.   .   .   .   Child: 0  Id: yarn of type int [line: 125]					.   .   .   .   Child: 0  Id: yarn of type int [line: 125]
.   .   .   .   Child: 1  Op: ? of type int [line: 125]						.   .   .   .   Child: 1  Op: ? of type int [line: 125]
.   .   .   .   .   Child: 0  Op: sizeof of type int [line: 125]				.   .   .   .   .   Child: 0  Op: sizeof of type int [line: 125]
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 125]				.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 125]
.   .   Sibling: 4  Return [line: 127]								.   .   Sibling: 4  Return [line: 127]
.   .   .   Child: 0  Call: Wendolene of type int [line: 127]					.   .   .   Child: 0  Call: Wendolene of type int [line: 127]
.   .   .   .   Child: 0  Op: * of type int [line: 127]						.   .   .   .   Child: 0  Op: * of type int [line: 127]
.   .   .   .   .   Child: 0  Op: sizeof of type int [line: 127]				.   .   .   .   .   Child: 0  Op: sizeof of type int [line: 127]
.   .   .   .   .   .   Child: 0  Id: preston of type bool [line: 127]				.   .   .   .   .   .   Child: 0  Id: preston of type bool [line: 127]
.   .   .   .   .   Child: 1  Op: sizeof of type int [line: 127]				.   .   .   .   .   Child: 1  Op: sizeof of type int [line: 127]
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 127]				.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 127]
.   .   .   .   Sibling: 1  Id: shaun of type bool [line: 127]					.   .   .   .   Sibling: 1  Id: shaun of type bool [line: 127]
.   .   .   .   Sibling: 2  Id: yarn of type int [line: 127]					.   .   .   .   Sibling: 2  Id: yarn of type int [line: 127]
.   .   .   .   Sibling: 3  Id: preston of type bool [line: 127]				.   .   .   .   Sibling: 3  Id: preston of type bool [line: 127]
Sibling: 12  Var: aBigLongVariableName6andthx1138 of type bool [line: 130]			Sibling: 12  Var: aBigLongVariableName6andthx1138 of type bool [line: 130]
Sibling: 13  Var: odd of type int [line: 131]							Sibling: 13  Var: odd of type int [line: 131]
Sibling: 14  Var: separation of type int [line: 131]						Sibling: 14  Var: separation of type int [line: 131]
Sibling: 15  Var: of of type int [line: 131]							Sibling: 15  Var: of of type int [line: 131]
Sibling: 16  Var: stuff of type int [line: 132]							Sibling: 16  Var: stuff of type int [line: 132]
Sibling: 17  Var: ant is array of type char [line: 134]						Sibling: 17  Var: ant is array of type char [line: 134]
.   Child: 0  Const is array "unwrinkled" of type char [line: 134]				.   Child: 0  Const is array "unwrinkled" of type char [line: 134]
Sibling: 18  Var: bat of type char [line: 135]							Sibling: 18  Var: bat of type char [line: 135]
.   Child: 0  Const ''' of type char [line: 135]						.   Child: 0  Const ''' of type char [line: 135]
Sibling: 19  Var: cat of type char [line: 136]							Sibling: 19  Var: cat of type char [line: 136]
.   Child: 0  Const 't' of type char [line: 136]						.   Child: 0  Const 't' of type char [line: 136]
Sibling: 20  Var: dog of type char [line: 137]							Sibling: 20  Var: dog of type char [line: 137]
.   Child: 0  Const '										.   Child: 0  Const '
' of type char [line: 137]									' of type char [line: 137]
Sibling: 21  Var: hog of type char [line: 138]							Sibling: 21  Var: hog of type char [line: 138]
.   Child: 0  Const ' ' of type char [line: 138]						      |	.   Child: 0  Const '' of type char [line: 138]
Number of warnings: 17									      |	Number of warnings: 18
Number of errors: 0										Number of errors: 0
./tests/hw3/exp: PASS
./tests/hw3/expL: PASS
./tests/hw3/expR: PASS
./tests/hw3/for2: FAIL
Diff for ./tests/hw3/for2:
EXPECTED | MINE
ERROR(8): Symbol 'j' is already declared at line 6.					      <
WARNING(9): Variable 'i' may be uninitialized when used here.					WARNING(9): Variable 'i' may be uninitialized when used here.
											      >	WARNING(9): Variable 'j' may be uninitialized when used here.
											      >	WARNING(6): The variable 'j' seems not to be used.
WARNING(5): The variable 'i' seems not to be used.						WARNING(5): The variable 'i' seems not to be used.
WARNING(3): The variable 'a' seems not to be used.						WARNING(3): The variable 'a' seems not to be used.
Number of warnings: 3									      |	Number of warnings: 5
Number of errors: 1									      |	Number of errors: 0
./tests/hw3/fora: PASS
./tests/hw3/forb: PASS
./tests/hw3/for: PASS
./tests/hw3/forscope: FAIL
Diff for ./tests/hw3/forscope:
EXPECTED | MINE
ERROR(6): Symbol 'x' is already declared at line 5.					      |	WARNING(6): The variable 'x' seems not to be used.
WARNING(10): The variable 'x' seems not to be used.					      |	WARNING(11): The variable 'x' seems not to be used.
ERROR(16): Symbol 'x' is already declared at line 15.					      |	WARNING(18): The variable 'x' seems not to be used.
WARNING(15): The variable 'x' seems not to be used.					      |	WARNING(16): The variable 'x' seems not to be used.
ERROR(29): Symbol 'x' is already declared at line 28.					      |	WARNING(24): The variable 'x' seems not to be used.
Number of warnings: 2									      |	WARNING(30): Variable 'x' may be uninitialized when used here.
Number of errors: 3									      |	WARNING(31): The variable 'x' seems not to be used.
											      >	WARNING(38): The variable 'x' seems not to be used.
											      >	WARNING(41): The variable 'x' seems not to be used.
											      >	WARNING(48): The variable 'x' seems not to be used.
											      >	Number of warnings: 10
											      >	Number of errors: 0
./tests/hw3/funcscope: FAIL
Diff for ./tests/hw3/funcscope:
EXPECTED | MINE
ERROR(5): Symbol 'x' is already declared at line 5.						ERROR(5): Symbol 'x' is already declared at line 5.
ERROR(6): Symbol 'x' is already declared at line 5.						ERROR(6): Symbol 'x' is already declared at line 5.
WARNING(10): The variable 'x' seems not to be used.					      |	WARNING(11): The variable 'x' seems not to be used.
ERROR(16): Symbol 'x' is already declared at line 15.						ERROR(16): Symbol 'x' is already declared at line 15.
WARNING(15): The variable 'x' seems not to be used.					      |	WARNING(18): The variable 'x' seems not to be used.
											      >	WARNING(24): The variable 'x' seems not to be used.
ERROR(29): Symbol 'x' is already declared at line 28.						ERROR(29): Symbol 'x' is already declared at line 28.
											      >	WARNING(31): The variable 'x' seems not to be used.
											      >	WARNING(38): The variable 'x' seems not to be used.
											      >	WARNING(41): The variable 'x' seems not to be used.
											      >	WARNING(49): The variable 'x' seems not to be used.
ERROR(LINKER): A function named 'main()' must be defined.					ERROR(LINKER): A function named 'main()' must be defined.
Number of warnings: 2									      |	Number of warnings: 7
Number of errors: 5										Number of errors: 5
./tests/hw3/if: PASS
./tests/hw3/ifNest: PASS
./tests/hw3/init2: PASS
./tests/hw3/init3: PASS
./tests/hw3/init4: FAIL
Diff for ./tests/hw3/init4:
EXPECTED | MINE
WARNING(5): The variable 'roll' seems not to be used.						WARNING(5): The variable 'roll' seems not to be used.
											      >	WARNING(3): The variable 'x' seems not to be used.
WARNING(4): The variable 'y' seems not to be used.						WARNING(4): The variable 'y' seems not to be used.
Func: main returns type int [line: 1]								Func: main returns type int [line: 1]
.   Child: 1  Compound [line: 2]								.   Child: 1  Compound [line: 2]
.   .   Child: 0  Var: x of type int [line: 3]							.   .   Child: 0  Var: x of type int [line: 3]
.   .   .   Child: 0  Op: * of type int [line: 3]						.   .   .   Child: 0  Op: * of type int [line: 3]
.   .   .   .   Child: 0  Const 23 of type int [line: 3]					.   .   .   .   Child: 0  Const 23 of type int [line: 3]
.   .   .   .   Child: 1  Const 3 of type int [line: 3]						.   .   .   .   Child: 1  Const 3 of type int [line: 3]
.   .   Sibling: 1  Var: y of type int [line: 4]						.   .   Sibling: 1  Var: y of type int [line: 4]
.   .   .   Child: 0  Id: x of type int [line: 4]					      |	.   .   .   Child: 0  Id: x of undefined type [line: 4]
.   .   Sibling: 2  Var: roll of type int [line: 5]						.   .   Sibling: 2  Var: roll of type int [line: 5]
.   .   .   Child: 0  Op: ? of type int [line: 5]						.   .   .   Child: 0  Op: ? of type int [line: 5]
.   .   .   .   Child: 0  Const 6 of type int [line: 5]						.   .   .   .   Child: 0  Const 6 of type int [line: 5]
.   .   Child: 1  Const 333 of type int [line: 6]						.   .   Child: 1  Const 333 of type int [line: 6]
.   .   Sibling: 1  Const 'z' of type char [line: 7]						.   .   Sibling: 1  Const 'z' of type char [line: 7]
.   .   Sibling: 2  Const true of type bool [line: 8]						.   .   Sibling: 2  Const true of type bool [line: 8]
Number of warnings: 2									      |	Number of warnings: 3
Number of errors: 0										Number of errors: 0
./tests/hw3/init: PASS
./tests/hw3/mixedControl2: PASS
./tests/hw3/mixedControl3: PASS
./tests/hw3/mixedControl: PASS
./tests/hw3/nest: FAIL
Diff for ./tests/hw3/nest:
EXPECTED | MINE
ERROR(18): Symbol 'output' is not declared.							ERROR(18): Symbol 'output' is not declared.
ERROR(19): Symbol 'output' is not declared.							ERROR(19): Symbol 'output' is not declared.
ERROR(20): Symbol 'output' is not declared.							ERROR(20): Symbol 'output' is not declared.
											      >	WARNING(20): Variable 'x' may be uninitialized when used here.
ERROR(21): Symbol 'output' is not declared.							ERROR(21): Symbol 'output' is not declared.
ERROR(22): Symbol 'output' is not declared.							ERROR(22): Symbol 'output' is not declared.
ERROR(23): Symbol 'outnl' is not declared.							ERROR(23): Symbol 'outnl' is not declared.
ERROR(43): Symbol 'output' is not declared.							ERROR(43): Symbol 'output' is not declared.
ERROR(44): Symbol 'output' is not declared.							ERROR(44): Symbol 'output' is not declared.
ERROR(45): Symbol 'output' is not declared.							ERROR(45): Symbol 'output' is not declared.
ERROR(46): Symbol 'output' is not declared.							ERROR(46): Symbol 'output' is not declared.
ERROR(47): Symbol 'output' is not declared.							ERROR(47): Symbol 'output' is not declared.
											      >	WARNING(47): Variable 'z' may be uninitialized when used here.
ERROR(48): Symbol 'outnl' is not declared.							ERROR(48): Symbol 'outnl' is not declared.
ERROR(58): Symbol 'output' is not declared.							ERROR(58): Symbol 'output' is not declared.
											      >	WARNING(58): Variable 'a' may be uninitialized when used here.
ERROR(59): Symbol 'output' is not declared.							ERROR(59): Symbol 'output' is not declared.
											      >	WARNING(59): Variable 'b' may be uninitialized when used here.
ERROR(60): Symbol 'output' is not declared.							ERROR(60): Symbol 'output' is not declared.
ERROR(61): Symbol 'output' is not declared.							ERROR(61): Symbol 'output' is not declared.
ERROR(62): Symbol 'output' is not declared.							ERROR(62): Symbol 'output' is not declared.
											      >	WARNING(62): Variable 'z' may be uninitialized when used here.
ERROR(63): Symbol 'outnl' is not declared.							ERROR(63): Symbol 'outnl' is not declared.
ERROR(70): Symbol 'output' is not declared.							ERROR(70): Symbol 'output' is not declared.
ERROR(71): Symbol 'output' is not declared.							ERROR(71): Symbol 'output' is not declared.
ERROR(72): Symbol 'output' is not declared.							ERROR(72): Symbol 'output' is not declared.
ERROR(73): Symbol 'output' is not declared.							ERROR(73): Symbol 'output' is not declared.
ERROR(74): Symbol 'output' is not declared.							ERROR(74): Symbol 'output' is not declared.
ERROR(75): Symbol 'outnl' is not declared.							ERROR(75): Symbol 'outnl' is not declared.
ERROR(77): Symbol 'output' is not declared.							ERROR(77): Symbol 'output' is not declared.
ERROR(78): Symbol 'output' is not declared.							ERROR(78): Symbol 'output' is not declared.
ERROR(79): Symbol 'output' is not declared.							ERROR(79): Symbol 'output' is not declared.
ERROR(80): Symbol 'output' is not declared.							ERROR(80): Symbol 'output' is not declared.
ERROR(81): Symbol 'output' is not declared.							ERROR(81): Symbol 'output' is not declared.
ERROR(82): Symbol 'outnl' is not declared.							ERROR(82): Symbol 'outnl' is not declared.
ERROR(89): Symbol 'output' is not declared.							ERROR(89): Symbol 'output' is not declared.
ERROR(90): Symbol 'output' is not declared.							ERROR(90): Symbol 'output' is not declared.
ERROR(91): Symbol 'output' is not declared.							ERROR(91): Symbol 'output' is not declared.
ERROR(92): Symbol 'output' is not declared.							ERROR(92): Symbol 'output' is not declared.
ERROR(93): Symbol 'output' is not declared.							ERROR(93): Symbol 'output' is not declared.
ERROR(94): Symbol 'outnl' is not declared.							ERROR(94): Symbol 'outnl' is not declared.
ERROR(97): Symbol 'output' is not declared.							ERROR(97): Symbol 'output' is not declared.
ERROR(98): Symbol 'output' is not declared.							ERROR(98): Symbol 'output' is not declared.
ERROR(99): Symbol 'output' is not declared.							ERROR(99): Symbol 'output' is not declared.
ERROR(100): Symbol 'output' is not declared.							ERROR(100): Symbol 'output' is not declared.
ERROR(101): Symbol 'output' is not declared.							ERROR(101): Symbol 'output' is not declared.
ERROR(102): Symbol 'outnl' is not declared.							ERROR(102): Symbol 'outnl' is not declared.
ERROR(106): Symbol 'output' is not declared.							ERROR(106): Symbol 'output' is not declared.
ERROR(107): Symbol 'output' is not declared.							ERROR(107): Symbol 'output' is not declared.
ERROR(108): Symbol 'output' is not declared.							ERROR(108): Symbol 'output' is not declared.
ERROR(109): Symbol 'output' is not declared.							ERROR(109): Symbol 'output' is not declared.
ERROR(110): Symbol 'output' is not declared.							ERROR(110): Symbol 'output' is not declared.
ERROR(111): Symbol 'outnl' is not declared.							ERROR(111): Symbol 'outnl' is not declared.
Number of warnings: 0									      |	Number of warnings: 5
Number of errors: 48										Number of errors: 48
./tests/hw3/ops: FAIL
Diff for ./tests/hw3/ops:
EXPECTED | MINE
ERROR(25): Symbol 'outputb' is not declared.							ERROR(25): Symbol 'outputb' is not declared.
ERROR(26): Symbol 'outputb' is not declared.							ERROR(26): Symbol 'outputb' is not declared.
ERROR(27): Symbol 'outputb' is not declared.							ERROR(27): Symbol 'outputb' is not declared.
ERROR(28): Symbol 'outnl' is not declared.							ERROR(28): Symbol 'outnl' is not declared.
ERROR(30): Symbol 'outputb' is not declared.							ERROR(30): Symbol 'outputb' is not declared.
ERROR(31): Symbol 'outputb' is not declared.							ERROR(31): Symbol 'outputb' is not declared.
ERROR(32): Symbol 'outputb' is not declared.							ERROR(32): Symbol 'outputb' is not declared.
ERROR(33): Symbol 'outnl' is not declared.							ERROR(33): Symbol 'outnl' is not declared.
ERROR(35): Symbol 'outputb' is not declared.							ERROR(35): Symbol 'outputb' is not declared.
ERROR(36): Symbol 'outputb' is not declared.							ERROR(36): Symbol 'outputb' is not declared.
ERROR(37): Symbol 'outputb' is not declared.							ERROR(37): Symbol 'outputb' is not declared.
ERROR(38): Symbol 'outnl' is not declared.							ERROR(38): Symbol 'outnl' is not declared.
ERROR(40): Symbol 'outputb' is not declared.							ERROR(40): Symbol 'outputb' is not declared.
ERROR(41): Symbol 'outputb' is not declared.							ERROR(41): Symbol 'outputb' is not declared.
ERROR(42): Symbol 'outputb' is not declared.							ERROR(42): Symbol 'outputb' is not declared.
ERROR(43): Symbol 'outnl' is not declared.							ERROR(43): Symbol 'outnl' is not declared.
ERROR(45): Symbol 'outputb' is not declared.							ERROR(45): Symbol 'outputb' is not declared.
ERROR(46): Symbol 'outputb' is not declared.							ERROR(46): Symbol 'outputb' is not declared.
ERROR(47): Symbol 'outputb' is not declared.							ERROR(47): Symbol 'outputb' is not declared.
ERROR(48): Symbol 'outnl' is not declared.							ERROR(48): Symbol 'outnl' is not declared.
ERROR(50): Symbol 'outputb' is not declared.							ERROR(50): Symbol 'outputb' is not declared.
ERROR(51): Symbol 'outputb' is not declared.							ERROR(51): Symbol 'outputb' is not declared.
ERROR(52): Symbol 'outputb' is not declared.							ERROR(52): Symbol 'outputb' is not declared.
ERROR(53): Symbol 'outputb' is not declared.							ERROR(53): Symbol 'outputb' is not declared.
ERROR(54): Symbol 'outnl' is not declared.							ERROR(54): Symbol 'outnl' is not declared.
ERROR(56): Symbol 'outputb' is not declared.							ERROR(56): Symbol 'outputb' is not declared.
ERROR(57): Symbol 'outputb' is not declared.							ERROR(57): Symbol 'outputb' is not declared.
ERROR(58): Symbol 'outputb' is not declared.							ERROR(58): Symbol 'outputb' is not declared.
ERROR(59): Symbol 'outputb' is not declared.							ERROR(59): Symbol 'outputb' is not declared.
ERROR(60): Symbol 'outnl' is not declared.							ERROR(60): Symbol 'outnl' is not declared.
ERROR(62): Symbol 'outputb' is not declared.							ERROR(62): Symbol 'outputb' is not declared.
ERROR(63): Symbol 'outputb' is not declared.							ERROR(63): Symbol 'outputb' is not declared.
ERROR(64): Symbol 'outputb' is not declared.							ERROR(64): Symbol 'outputb' is not declared.
ERROR(65): Symbol 'outputb' is not declared.							ERROR(65): Symbol 'outputb' is not declared.
ERROR(66): Symbol 'outnl' is not declared.							ERROR(66): Symbol 'outnl' is not declared.
ERROR(68): Symbol 'outputb' is not declared.							ERROR(68): Symbol 'outputb' is not declared.
ERROR(69): Symbol 'outputb' is not declared.							ERROR(69): Symbol 'outputb' is not declared.
ERROR(70): Symbol 'outputb' is not declared.							ERROR(70): Symbol 'outputb' is not declared.
ERROR(71): Symbol 'outputb' is not declared.							ERROR(71): Symbol 'outputb' is not declared.
ERROR(72): Symbol 'outnl' is not declared.							ERROR(72): Symbol 'outnl' is not declared.
ERROR(74): Symbol 'output' is not declared.							ERROR(74): Symbol 'output' is not declared.
ERROR(75): Symbol 'output' is not declared.							ERROR(75): Symbol 'output' is not declared.
ERROR(76): Symbol 'outnl' is not declared.							ERROR(76): Symbol 'outnl' is not declared.
ERROR(78): Symbol 'output' is not declared.							ERROR(78): Symbol 'output' is not declared.
ERROR(79): Symbol 'output' is not declared.							ERROR(79): Symbol 'output' is not declared.
ERROR(80): Symbol 'outnl' is not declared.							ERROR(80): Symbol 'outnl' is not declared.
ERROR(83): Symbol 'output' is not declared.							ERROR(83): Symbol 'output' is not declared.
ERROR(84): Symbol 'output' is not declared.							ERROR(84): Symbol 'output' is not declared.
ERROR(85): Symbol 'output' is not declared.							ERROR(85): Symbol 'output' is not declared.
ERROR(86): Symbol 'output' is not declared.							ERROR(86): Symbol 'output' is not declared.
ERROR(87): Symbol 'output' is not declared.							ERROR(87): Symbol 'output' is not declared.
ERROR(88): Symbol 'outnl' is not declared.							ERROR(88): Symbol 'outnl' is not declared.
ERROR(90): Symbol 'output' is not declared.							ERROR(90): Symbol 'output' is not declared.
ERROR(91): Symbol 'output' is not declared.							ERROR(91): Symbol 'output' is not declared.
ERROR(92): Symbol 'output' is not declared.							ERROR(92): Symbol 'output' is not declared.
ERROR(93): Symbol 'outnl' is not declared.							ERROR(93): Symbol 'outnl' is not declared.
ERROR(95): Symbol 'output' is not declared.							ERROR(95): Symbol 'output' is not declared.
ERROR(96): Symbol 'output' is not declared.							ERROR(96): Symbol 'output' is not declared.
ERROR(97): Symbol 'output' is not declared.							ERROR(97): Symbol 'output' is not declared.
ERROR(98): Symbol 'output' is not declared.							ERROR(98): Symbol 'output' is not declared.
ERROR(99): Symbol 'outnl' is not declared.							ERROR(99): Symbol 'outnl' is not declared.
ERROR(102): Symbol 'output' is not declared.							ERROR(102): Symbol 'output' is not declared.
ERROR(103): Symbol 'output' is not declared.							ERROR(103): Symbol 'output' is not declared.
ERROR(104): Symbol 'output' is not declared.							ERROR(104): Symbol 'output' is not declared.
ERROR(105): Symbol 'output' is not declared.							ERROR(105): Symbol 'output' is not declared.
ERROR(106): Symbol 'output' is not declared.							ERROR(106): Symbol 'output' is not declared.
ERROR(107): Symbol 'output' is not declared.							ERROR(107): Symbol 'output' is not declared.
ERROR(108): Symbol 'outnl' is not declared.							ERROR(108): Symbol 'outnl' is not declared.
ERROR(110): Symbol 'output' is not declared.							ERROR(110): Symbol 'output' is not declared.
ERROR(111): Symbol 'output' is not declared.							ERROR(111): Symbol 'output' is not declared.
											      >	ERROR(112): '*' requires operands of type int but lhs is of type undefined.
											      >	ERROR(112): '*' requires operands of type int but rhs is of type undefined.
ERROR(113): Symbol 'output' is not declared.							ERROR(113): Symbol 'output' is not declared.
ERROR(114): Symbol 'outnl' is not declared.							ERROR(114): Symbol 'outnl' is not declared.
ERROR(118): Symbol 'output' is not declared.							ERROR(118): Symbol 'output' is not declared.
ERROR(119): Symbol 'output' is not declared.							ERROR(119): Symbol 'output' is not declared.
ERROR(120): Symbol 'output' is not declared.							ERROR(120): Symbol 'output' is not declared.
ERROR(121): Symbol 'output' is not declared.							ERROR(121): Symbol 'output' is not declared.
ERROR(122): Symbol 'outnl' is not declared.							ERROR(122): Symbol 'outnl' is not declared.
ERROR(126): Symbol 'output' is not declared.							ERROR(126): Symbol 'output' is not declared.
ERROR(127): Symbol 'output' is not declared.							ERROR(127): Symbol 'output' is not declared.
ERROR(128): Symbol 'output' is not declared.							ERROR(128): Symbol 'output' is not declared.
ERROR(129): Symbol 'output' is not declared.							ERROR(129): Symbol 'output' is not declared.
ERROR(130): Symbol 'outnl' is not declared.							ERROR(130): Symbol 'outnl' is not declared.
ERROR(134): Symbol 'output' is not declared.							ERROR(134): Symbol 'output' is not declared.
ERROR(135): Symbol 'output' is not declared.							ERROR(135): Symbol 'output' is not declared.
ERROR(136): Symbol 'outnl' is not declared.							ERROR(136): Symbol 'outnl' is not declared.
ERROR(138): Symbol 'output' is not declared.							ERROR(138): Symbol 'output' is not declared.
ERROR(139): Symbol 'output' is not declared.							ERROR(139): Symbol 'output' is not declared.
ERROR(140): Symbol 'output' is not declared.							ERROR(140): Symbol 'output' is not declared.
ERROR(141): Symbol 'outnl' is not declared.							ERROR(141): Symbol 'outnl' is not declared.
ERROR(143): Symbol 'outputb' is not declared.							ERROR(143): Symbol 'outputb' is not declared.
ERROR(144): Symbol 'outputb' is not declared.							ERROR(144): Symbol 'outputb' is not declared.
ERROR(145): Symbol 'outputb' is not declared.							ERROR(145): Symbol 'outputb' is not declared.
ERROR(146): Symbol 'outnl' is not declared.							ERROR(146): Symbol 'outnl' is not declared.
ERROR(148): Symbol 'outputb' is not declared.							ERROR(148): Symbol 'outputb' is not declared.
ERROR(149): Symbol 'outputb' is not declared.							ERROR(149): Symbol 'outputb' is not declared.
ERROR(150): Symbol 'outputb' is not declared.							ERROR(150): Symbol 'outputb' is not declared.
ERROR(151): Symbol 'outputb' is not declared.							ERROR(151): Symbol 'outputb' is not declared.
ERROR(152): Symbol 'outputb' is not declared.							ERROR(152): Symbol 'outputb' is not declared.
ERROR(153): Symbol 'outputb' is not declared.							ERROR(153): Symbol 'outputb' is not declared.
ERROR(154): Symbol 'outputb' is not declared.							ERROR(154): Symbol 'outputb' is not declared.
ERROR(155): Symbol 'outputb' is not declared.							ERROR(155): Symbol 'outputb' is not declared.
ERROR(156): Symbol 'outputb' is not declared.							ERROR(156): Symbol 'outputb' is not declared.
ERROR(157): Symbol 'outputb' is not declared.							ERROR(157): Symbol 'outputb' is not declared.
ERROR(158): Symbol 'outputb' is not declared.							ERROR(158): Symbol 'outputb' is not declared.
ERROR(159): Symbol 'outputb' is not declared.							ERROR(159): Symbol 'outputb' is not declared.
ERROR(160): Symbol 'outputb' is not declared.							ERROR(160): Symbol 'outputb' is not declared.
ERROR(161): Symbol 'outnl' is not declared.							ERROR(161): Symbol 'outnl' is not declared.
ERROR(163): Symbol 'outputb' is not declared.							ERROR(163): Symbol 'outputb' is not declared.
ERROR(164): Symbol 'outputb' is not declared.							ERROR(164): Symbol 'outputb' is not declared.
ERROR(165): Symbol 'outnl' is not declared.							ERROR(165): Symbol 'outnl' is not declared.
Number of warnings: 0										Number of warnings: 0
Number of errors: 110									      |	Number of errors: 112
./tests/hw3/optype: FAIL
Diff for ./tests/hw3/optype:
EXPECTED | MINE
WARNING(7): Variable 'a' may be uninitialized when used here.					WARNING(7): Variable 'a' may be uninitialized when used here.
WARNING(8): Variable 'b' may be uninitialized when used here.					WARNING(8): Variable 'b' may be uninitialized when used here.
ERROR(8): '<' requires operands of the same type but lhs is type int and rhs is type bool.	ERROR(8): '<' requires operands of the same type but lhs is type int and rhs is type bool.
WARNING(9): Variable 'c' may be uninitialized when used here.					WARNING(9): Variable 'c' may be uninitialized when used here.
ERROR(9): '<' requires operands of the same type but lhs is type int and rhs is type char.	ERROR(9): '<' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(10): '<' requires operands of the same type but lhs is type bool and rhs is type int.	ERROR(10): '<' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(12): '<' requires operands of the same type but lhs is type bool and rhs is type char.	ERROR(12): '<' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(13): '<' requires operands of the same type but lhs is type char and rhs is type int.	ERROR(13): '<' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(14): '<' requires operands of the same type but lhs is type char and rhs is type bool.	ERROR(14): '<' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(17): Symbol 'x' is not declared.								ERROR(17): Symbol 'x' is not declared.
											      >	ERROR(17): '<' requires operands of the same type but lhs is type undefined and rhs is type i
ERROR(18): Symbol 'x' is not declared.								ERROR(18): Symbol 'x' is not declared.
											      >	ERROR(18): '<' requires operands of the same type but lhs is type undefined and rhs is type b
ERROR(19): Symbol 'x' is not declared.								ERROR(19): Symbol 'x' is not declared.
											      >	ERROR(19): '<' requires operands of the same type but lhs is type undefined and rhs is type c
Number of warnings: 3										Number of warnings: 3
Number of errors: 9									      |	Number of errors: 12
./tests/hw3/overlapArray: PASS
./tests/hw3/overlap: PASS
./tests/hw3/overlapStatic: PASS
./tests/hw3/part2: FAIL
Diff for ./tests/hw3/part2:
EXPECTED | MINE
WARNING(4): Variable 'z' may be uninitialized when used here.					WARNING(4): Variable 'z' may be uninitialized when used here.
ERROR(5): Cannot return an array.								ERROR(5): Cannot return an array.
ERROR(20): Symbol 'x' is already declared at line 18.						ERROR(20): Symbol 'x' is already declared at line 18.
ERROR(26): Symbol 'dog' is already declared at line 18.						ERROR(26): Symbol 'dog' is already declared at line 18.
WARNING(28): The variable 'z' seems not to be used.						WARNING(28): The variable 'z' seems not to be used.
ERROR(35): '+' requires operands of type int but lhs is of type char.			      <
ERROR(42): Symbol 'zebu' is not declared.							ERROR(42): Symbol 'zebu' is not declared.
ERROR(47): '+' requires operands of type int but lhs is of type char.			      <
ERROR(47): Unary 'chsign' requires an operand of type int but was given type bool.	      <
WARNING(49): Variable 'z' may be uninitialized when used here.					WARNING(49): Variable 'z' may be uninitialized when used here.
WARNING(35): The variable 'd' seems not to be used.						WARNING(35): The variable 'd' seems not to be used.
Number of warnings: 4										Number of warnings: 4
Number of errors: 7									      |	Number of errors: 4
./tests/hw3/randomRoll: PASS
./tests/hw3/return: PASS
./tests/hw3/scope: FAIL
Diff for ./tests/hw3/scope:
EXPECTED | MINE
ERROR(7): Symbol 'bat' is not declared.								ERROR(7): Symbol 'bat' is not declared.
WARNING(8): Variable 'a' may be uninitialized when used here.					WARNING(8): Variable 'a' may be uninitialized when used here.
ERROR(8): 'or' requires operands of type bool but lhs is of type int.				ERROR(8): 'or' requires operands of type bool but lhs is of type int.
ERROR(8): 'or' requires operands of type bool but rhs is of type int.				ERROR(8): 'or' requires operands of type bool but rhs is of type int.
ERROR(14): Symbol 'b' is not declared.								ERROR(14): Symbol 'b' is not declared.
WARNING(15): Variable 'c' may be uninitialized when used here.					WARNING(15): Variable 'c' may be uninitialized when used here.
WARNING(19): The variable 'IWouldNotEatItWithAGoat' seems not to be used.			WARNING(19): The variable 'IWouldNotEatItWithAGoat' seems not to be used.
ERROR(25): Symbol 'b' is not declared.								ERROR(25): Symbol 'b' is not declared.
ERROR(26): Symbol 'c' is not declared.								ERROR(26): Symbol 'c' is not declared.
ERROR(30): Symbol 'b' is not declared.								ERROR(30): Symbol 'b' is not declared.
ERROR(31): Symbol 'c' is not declared.								ERROR(31): Symbol 'c' is not declared.
ERROR(41): Symbol 'x' is not declared.								ERROR(41): Symbol 'x' is not declared.
WARNING(44): Variable 'z' may be uninitialized when used here.					WARNING(44): Variable 'z' may be uninitialized when used here.
ERROR(45): Symbol 'p' is not declared.								ERROR(45): Symbol 'p' is not declared.
ERROR(46): Symbol 'q' is not declared.								ERROR(46): Symbol 'q' is not declared.
ERROR(46): Symbol 'r' is not declared.								ERROR(46): Symbol 'r' is not declared.
											      >	ERROR(46): '+' requires operands of type int but lhs is of type undefined.
											      >	ERROR(46): '+' requires operands of type int but rhs is of type undefined.
ERROR(47): Symbol 's' is not declared.								ERROR(47): Symbol 's' is not declared.
ERROR(47): Symbol 't' is not declared.								ERROR(47): Symbol 't' is not declared.
ERROR(48): Symbol 'u' is not declared.								ERROR(48): Symbol 'u' is not declared.
ERROR(48): Symbol 'cow' is not declared.							ERROR(48): Symbol 'cow' is not declared.
ERROR(48): Symbol 'v' is not declared.								ERROR(48): Symbol 'v' is not declared.
ERROR(49): Symbol 'abraxsis' is not declared.							ERROR(49): Symbol 'abraxsis' is not declared.
ERROR(50): Symbol 'a' is not declared.								ERROR(50): Symbol 'a' is not declared.
WARNING(40): The variable 'bat' seems not to be used.						WARNING(40): The variable 'bat' seems not to be used.
ERROR(55): Symbol 'g' is already declared at line 2.						ERROR(55): Symbol 'g' is already declared at line 2.
ERROR(57): Symbol 'g' is already declared at line 2.						ERROR(57): Symbol 'g' is already declared at line 2.
ERROR(59): Symbol 'x' is not declared.								ERROR(59): Symbol 'x' is not declared.
ERROR(62): Symbol 'g' is already declared at line 2.						ERROR(62): Symbol 'g' is already declared at line 2.
ERROR(63): Symbol 'ant' is already declared at line 3.						ERROR(63): Symbol 'ant' is already declared at line 3.
ERROR(LINKER): A function named 'main()' must be defined.					ERROR(LINKER): A function named 'main()' must be defined.
Number of warnings: 5										Number of warnings: 5
Number of errors: 25									      |	Number of errors: 27
./tests/hw3/static: PASS
./tests/hw3/strange: PASS
./tests/hw3/types3: FAIL
Diff for ./tests/hw3/types3:
EXPECTED | MINE
ERROR(5): Symbol 'lund' is already declared at line 3.						ERROR(5): Symbol 'lund' is already declared at line 3.
WARNING(5): The variable 'a' seems not to be used.						WARNING(5): The variable 'a' seems not to be used.
ERROR(9): Symbol 'a' is already declared at line 9.						ERROR(9): Symbol 'a' is already declared at line 9.
ERROR(11): Symbol 'a' is already declared at line 9.						ERROR(11): Symbol 'a' is already declared at line 9.
ERROR(12): 'a' is a simple variable and cannot be called.					ERROR(12): 'a' is a simple variable and cannot be called.
ERROR(13): Cannot use function 'fred' as a variable.						ERROR(13): Cannot use function 'fred' as a variable.
											      >	ERROR(13): Cannot use function 'fred' as a variable.
ERROR(16): Symbol 'fred' is already declared at line 9.						ERROR(16): Symbol 'fred' is already declared at line 9.
ERROR(20): Symbol 'linda' is already declared at line 18.					ERROR(20): Symbol 'linda' is already declared at line 18.
WARNING(18): The variable 'linda' seems not to be used.						WARNING(18): The variable 'linda' seems not to be used.
ERROR(26): Cannot use function 'arwen' as a variable.						ERROR(26): Cannot use function 'arwen' as a variable.
											      >	ERROR(26): Cannot use function 'arwen' as a variable.
WARNING(24): The variable 'eowyn' seems not to be used.						WARNING(24): The variable 'eowyn' seems not to be used.
ERROR(LINKER): A function named 'main()' must be defined.					ERROR(LINKER): A function named 'main()' must be defined.
Number of warnings: 3										Number of warnings: 3
Number of errors: 9									      |	Number of errors: 11
./tests/hw3/types: FAIL
Diff for ./tests/hw3/types:
EXPECTED | MINE
ERROR(8): Symbol 'c' is already declared at line 8.						ERROR(8): Symbol 'c' is already declared at line 8.
ERROR(9): Symbol 'i' is already declared at line 4.						ERROR(9): Symbol 'i' is already declared at line 4.
WARNING(12): Variable 'i' may be uninitialized when used here.					WARNING(12): Variable 'i' may be uninitialized when used here.
WARNING(13): Variable 'b' may be uninitialized when used here.					WARNING(13): Variable 'b' may be uninitialized when used here.
ERROR(13): '+' requires operands of type int but rhs is of type bool.				ERROR(13): '+' requires operands of type int but rhs is of type bool.
ERROR(14): '+' requires operands of type int but lhs is of type bool.				ERROR(14): '+' requires operands of type int but lhs is of type bool.
ERROR(15): '+' requires operands of type int but lhs is of type bool.				ERROR(15): '+' requires operands of type int but lhs is of type bool.
ERROR(15): '+' requires operands of type int but rhs is of type bool.				ERROR(15): '+' requires operands of type int but rhs is of type bool.
ERROR(17): 'and' requires operands of type bool but lhs is of type int.				ERROR(17): 'and' requires operands of type bool but lhs is of type int.
ERROR(17): 'and' requires operands of type bool but rhs is of type int.				ERROR(17): 'and' requires operands of type bool but rhs is of type int.
ERROR(18): 'and' requires operands of type bool but lhs is of type int.				ERROR(18): 'and' requires operands of type bool but lhs is of type int.
ERROR(19): 'and' requires operands of type bool but rhs is of type int.				ERROR(19): 'and' requires operands of type bool but rhs is of type int.
ERROR(23): ':=' requires operands of the same type but lhs is type int and rhs is type bool.	ERROR(23): ':=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(24): ':=' requires operands of the same type but lhs is type bool and rhs is type int.	ERROR(24): ':=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(28): '=' requires operands of the same type but lhs is type int and rhs is type bool.	ERROR(28): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(29): '=' requires operands of the same type but lhs is type bool and rhs is type int.	ERROR(29): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(33): '><' requires operands of the same type but lhs is type int and rhs is type bool.	ERROR(33): '><' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(34): '><' requires operands of the same type but lhs is type bool and rhs is type int.	ERROR(34): '><' requires operands of the same type but lhs is type bool and rhs is type int.
WARNING(37): Variable 'ia' may be uninitialized when used here.					WARNING(37): Variable 'ia' may be uninitialized when used here.
ERROR(37): The operation '+' does not work with arrays.						ERROR(37): The operation '+' does not work with arrays.
WARNING(38): Variable 'ba' may be uninitialized when used here.					WARNING(38): Variable 'ba' may be uninitialized when used here.
ERROR(38): '+' requires operands of type int but rhs is of type bool.				ERROR(38): '+' requires operands of type int but rhs is of type bool.
ERROR(38): The operation '+' does not work with arrays.						ERROR(38): The operation '+' does not work with arrays.
ERROR(39): '+' requires operands of type int but lhs is of type bool.				ERROR(39): '+' requires operands of type int but lhs is of type bool.
ERROR(39): The operation '+' does not work with arrays.						ERROR(39): The operation '+' does not work with arrays.
ERROR(40): '+' requires operands of type int but lhs is of type bool.				ERROR(40): '+' requires operands of type int but lhs is of type bool.
ERROR(40): '+' requires operands of type int but rhs is of type bool.				ERROR(40): '+' requires operands of type int but rhs is of type bool.
ERROR(40): The operation '+' does not work with arrays.						ERROR(40): The operation '+' does not work with arrays.
ERROR(42): 'and' requires operands of type bool but lhs is of type int.			      <
ERROR(42): 'and' requires operands of type bool but rhs is of type int.			      <
ERROR(42): The operation 'and' does not work with arrays.					ERROR(42): The operation 'and' does not work with arrays.
ERROR(43): 'and' requires operands of type bool but lhs is of type int.			      <
ERROR(43): The operation 'and' does not work with arrays.					ERROR(43): The operation 'and' does not work with arrays.
ERROR(44): 'and' requires operands of type bool but rhs is of type int.			      <
ERROR(44): The operation 'and' does not work with arrays.					ERROR(44): The operation 'and' does not work with arrays.
ERROR(45): The operation 'and' does not work with arrays.					ERROR(45): The operation 'and' does not work with arrays.
ERROR(48): ':=' requires operands of the same type but lhs is type int and rhs is type bool.	ERROR(48): ':=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(49): ':=' requires operands of the same type but lhs is type bool and rhs is type int.	ERROR(49): ':=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(53): '=' requires operands of the same type but lhs is type int and rhs is type bool.	ERROR(53): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(54): '=' requires operands of the same type but lhs is type bool and rhs is type int.	ERROR(54): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(57): '+' requires operands of type int but lhs is of type bool.				ERROR(57): '+' requires operands of type int but lhs is of type bool.
ERROR(58): '+' requires operands of type int but rhs is of type bool.				ERROR(58): '+' requires operands of type int but rhs is of type bool.
ERROR(59): '+' requires operands of type int but rhs is of type bool.				ERROR(59): '+' requires operands of type int but rhs is of type bool.
ERROR(61): 'or' requires operands of type bool but lhs is of type int.			      <
ERROR(62): 'or' requires operands of type bool but rhs is of type int.			      <
ERROR(63): 'or' requires operands of type bool but rhs is of type int.				ERROR(63): 'or' requires operands of type bool but rhs is of type int.
ERROR(66): Unary 'not' requires an operand of type bool but was given type int.			ERROR(66): Unary 'not' requires an operand of type bool but was given type int.
ERROR(67): The operation 'not' does not work with arrays.					ERROR(67): The operation 'not' does not work with arrays.
ERROR(68): Unary 'not' requires an operand of type bool but was given type int.			ERROR(68): Unary 'not' requires an operand of type bool but was given type int.
ERROR(68): The operation 'not' does not work with arrays.					ERROR(68): The operation 'not' does not work with arrays.
ERROR(70): Unary 'chsign' requires an operand of type int but was given type bool.		ERROR(70): Unary 'chsign' requires an operand of type int but was given type bool.
ERROR(72): Unary 'chsign' requires an operand of type int but was given type bool.		ERROR(72): Unary 'chsign' requires an operand of type int but was given type bool.
ERROR(72): The operation 'chsign' does not work with arrays.					ERROR(72): The operation 'chsign' does not work with arrays.
ERROR(73): The operation 'chsign' does not work with arrays.					ERROR(73): The operation 'chsign' does not work with arrays.
ERROR(76): '>' requires operands of the same type but lhs is type bool and rhs is type int.   <
ERROR(77): '>' requires operands of the same type but lhs is type int and rhs is type bool.   <
ERROR(78): '>' requires operands of the same type but lhs is type bool and rhs is type int.   <
ERROR(79): '>' requires operands of the same type but lhs is type bool and rhs is type int.   <
ERROR(79): '>' requires operands of the same type but lhs is type int and rhs is type bool.   <
ERROR(103): 'b' is a simple variable and cannot be called.					ERROR(103): 'b' is a simple variable and cannot be called.
ERROR(104): Cannot index nonarray 'b'.								ERROR(104): Cannot index nonarray 'b'.
ERROR(105): Symbol 'x' is not declared.								ERROR(105): Symbol 'x' is not declared.
ERROR(105): Cannot index nonarray 'x'.								ERROR(105): Cannot index nonarray 'x'.
ERROR(106): Cannot use function 'main' as a variable.						ERROR(106): Cannot use function 'main' as a variable.
ERROR(106): Cannot index nonarray 'main'.							ERROR(106): Cannot index nonarray 'main'.
ERROR(107): Cannot use function 'main' as a variable.						ERROR(107): Cannot use function 'main' as a variable.
ERROR(107): Cannot index nonarray 'main'.							ERROR(107): Cannot index nonarray 'main'.
ERROR(108): Array 'ba' should be indexed by type int but got type bool.				ERROR(108): Array 'ba' should be indexed by type int but got type bool.
ERROR(108): Array index is the unindexed array 'ba'.						ERROR(108): Array index is the unindexed array 'ba'.
ERROR(109): Array 'ba' should be indexed by type int but got type char.				ERROR(109): Array 'ba' should be indexed by type int but got type char.
											      >	ERROR(109): Array 'ba' should be indexed by type int but got type char.
ERROR(110): Cannot use function 'main' as a variable.						ERROR(110): Cannot use function 'main' as a variable.
ERROR(111): The operation '+' does not work with arrays.					ERROR(111): The operation '+' does not work with arrays.
ERROR(112): Symbol 'a' is not declared.								ERROR(112): Symbol 'a' is not declared.
											      >	ERROR(112): The operation 'sizeof' only works with arrays.
ERROR(113): The operation 'sizeof' only works with arrays.					ERROR(113): The operation 'sizeof' only works with arrays.
ERROR(114): Unary 'chsign' requires an operand of type int but was given type bool.		ERROR(114): Unary 'chsign' requires an operand of type int but was given type bool.
ERROR(116): Cannot return an array.								ERROR(116): Cannot return an array.
WARNING(8): The variable 'c' seems not to be used.						WARNING(8): The variable 'c' seems not to be used.
WARNING(10): The variable 'pumpkin' seems not to be used.					WARNING(10): The variable 'pumpkin' seems not to be used.
Number of warnings: 6										Number of warnings: 6
Number of errors: 72									      |	Number of errors: 63
./tests/hw3/undeclared: FAIL
Diff for ./tests/hw3/undeclared:
EXPECTED | MINE
ERROR(3): Symbol 'z' is not declared.								ERROR(3): Symbol 'z' is not declared.
ERROR(3): Symbol 'i' is not declared.								ERROR(3): Symbol 'i' is not declared.
ERROR(4): Symbol 'z' is not declared.								ERROR(4): Symbol 'z' is not declared.
ERROR(4): Symbol 'i' is not declared.								ERROR(4): Symbol 'i' is not declared.
ERROR(5): Symbol 'i' is not declared.								ERROR(5): Symbol 'i' is not declared.
ERROR(5): Symbol 'i' is not declared.								ERROR(5): Symbol 'i' is not declared.
											      >	ERROR(5): '+' requires operands of type int but lhs is of type undefined.
ERROR(6): Symbol 'j' is not declared.								ERROR(6): Symbol 'j' is not declared.
											      >	ERROR(6): Unary '++' requires an operand of type int but was given type undefined.
ERROR(7): Symbol 'l' is not declared.								ERROR(7): Symbol 'l' is not declared.
ERROR(8): Symbol 'm' is not declared.								ERROR(8): Symbol 'm' is not declared.
											      >	ERROR(8): Unary 'chsign' requires an operand of type int but was given type undefined.
ERROR(9): Symbol 'k' is not declared.								ERROR(9): Symbol 'k' is not declared.
WARNING(1): The variable 'x' seems not to be used.						WARNING(1): The variable 'x' seems not to be used.
ERROR(LINKER): A function named 'main()' must be defined.					ERROR(LINKER): A function named 'main()' must be defined.
Number of warnings: 1										Number of warnings: 1
Number of errors: 11									      |	Number of errors: 14
./tests/hw3/uninit2: FAIL
Diff for ./tests/hw3/uninit2:
EXPECTED | MINE
WARNING(6): Variable 'b' may be uninitialized when used here.					WARNING(6): Variable 'b' may be uninitialized when used here.
WARNING(8): Variable 'aa' may be uninitialized when used here.					WARNING(8): Variable 'aa' may be uninitialized when used here.
WARNING(9): Variable 'bb' may be uninitialized when used here.					WARNING(9): Variable 'bb' may be uninitialized when used here.
WARNING(9): Variable 'cc' may be uninitialized when used here.					WARNING(9): Variable 'cc' may be uninitialized when used here.
											      >	WARNING(11): Variable 'd' may be uninitialized when used here.
WARNING(12): Variable 'dd' may be uninitialized when used here.					WARNING(12): Variable 'dd' may be uninitialized when used here.
Func: main returns type void [line: 1]								Func: main returns type void [line: 1]
.   Child: 1  Compound [line: 2]								.   Child: 1  Compound [line: 2]
.   .   Child: 0  Var: a of type int [line: 3]							.   .   Child: 0  Var: a of type int [line: 3]
.   .   Sibling: 1  Var: b of type int [line: 3]						.   .   Sibling: 1  Var: b of type int [line: 3]
.   .   Sibling: 2  Var: c of type int [line: 3]						.   .   Sibling: 2  Var: c of type int [line: 3]
.   .   Sibling: 3  Var: d of type int [line: 3]						.   .   Sibling: 3  Var: d of type int [line: 3]
.   .   Sibling: 4  Var: aa is array of type int [line: 4]					.   .   Sibling: 4  Var: aa is array of type int [line: 4]
.   .   Sibling: 5  Var: bb is array of type int [line: 4]					.   .   Sibling: 5  Var: bb is array of type int [line: 4]
.   .   Sibling: 6  Var: cc is array of type int [line: 4]					.   .   Sibling: 6  Var: cc is array of type int [line: 4]
.   .   Sibling: 7  Var: dd is array of type int [line: 4]					.   .   Sibling: 7  Var: dd is array of type int [line: 4]
.   .   Sibling: 8  Var: ee is array of type int [line: 4]					.   .   Sibling: 8  Var: ee is array of type int [line: 4]
.   .   Child: 1  Assign: := of type int [line: 6]						.   .   Child: 1  Assign: := of type int [line: 6]
.   .   .   Child: 0  Id: a of type int [line: 6]						.   .   .   Child: 0  Id: a of type int [line: 6]
.   .   .   Child: 1  Id: b of type int [line: 6]						.   .   .   Child: 1  Id: b of type int [line: 6]
.   .   Sibling: 1  Assign: := of type int [line: 7]						.   .   Sibling: 1  Assign: := of type int [line: 7]
.   .   .   Child: 0  Id: a of type int [line: 7]						.   .   .   Child: 0  Id: a of type int [line: 7]
.   .   .   Child: 1  Id: b of type int [line: 7]						.   .   .   Child: 1  Id: b of type int [line: 7]
.   .   Sibling: 2  Assign: := of type int [line: 8]						.   .   Sibling: 2  Assign: := of type int [line: 8]
.   .   .   Child: 0  Id: a of type int [line: 8]						.   .   .   Child: 0  Id: a of type int [line: 8]
.   .   .   Child: 1  Op: [ of type int [line: 8]						.   .   .   Child: 1  Op: [ of type int [line: 8]
.   .   .   .   Child: 0  Id: aa of type int [line: 8]						.   .   .   .   Child: 0  Id: aa of type int [line: 8]
.   .   .   .   Child: 1  Const 3 of type int [line: 8]						.   .   .   .   Child: 1  Const 3 of type int [line: 8]
.   .   Sibling: 3  Assign: := of type int [line: 9]						.   .   Sibling: 3  Assign: := of type int [line: 9]
.   .   .   Child: 0  Id: a of type int [line: 9]						.   .   .   Child: 0  Id: a of type int [line: 9]
.   .   .   Child: 1  Op: [ of type int [line: 9]						.   .   .   Child: 1  Op: [ of type int [line: 9]
.   .   .   .   Child: 0  Id: bb of type int [line: 9]						.   .   .   .   Child: 0  Id: bb of type int [line: 9]
.   .   .   .   Child: 1  Op: [ of type int [line: 9]						.   .   .   .   Child: 1  Op: [ of type int [line: 9]
.   .   .   .   .   Child: 0  Id: cc of type int [line: 9]					.   .   .   .   .   Child: 0  Id: cc of type int [line: 9]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 9]					.   .   .   .   .   Child: 1  Const 3 of type int [line: 9]
.   .   Sibling: 4  Assign: := of type int [line: 10]						.   .   Sibling: 4  Assign: := of type int [line: 10]
.   .   .   Child: 0  Op: [ of type int [line: 10]						.   .   .   Child: 0  Op: [ of type int [line: 10]
.   .   .   .   Child: 0  Id: cc of type int [line: 10]						.   .   .   .   Child: 0  Id: cc of type int [line: 10]
.   .   .   .   Child: 1  Id: c of type int [line: 10]						.   .   .   .   Child: 1  Id: c of type int [line: 10]
.   .   .   Child: 1  Id: a of type int [line: 10]						.   .   .   Child: 1  Id: a of type int [line: 10]
.   .   Sibling: 5  Assign: := of type int [line: 11]						.   .   Sibling: 5  Assign: := of type int [line: 11]
.   .   .   Child: 0  Op: [ of type int [line: 11]						.   .   .   Child: 0  Op: [ of type int [line: 11]
.   .   .   .   Child: 0  Id: cc of type int [line: 11]						.   .   .   .   Child: 0  Id: cc of type int [line: 11]
.   .   .   .   Child: 1  Op: + of type int [line: 11]						.   .   .   .   Child: 1  Op: + of type int [line: 11]
.   .   .   .   .   Child: 0  Id: c of type int [line: 11]					.   .   .   .   .   Child: 0  Id: c of type int [line: 11]
.   .   .   .   .   Child: 1  Id: d of type int [line: 11]					.   .   .   .   .   Child: 1  Id: d of type int [line: 11]
.   .   .   Child: 1  Id: a of type int [line: 11]						.   .   .   Child: 1  Id: a of type int [line: 11]
.   .   Sibling: 6  Op: [ of type int [line: 12]						.   .   Sibling: 6  Op: [ of type int [line: 12]
.   .   .   Child: 0  Id: cc of type int [line: 12]						.   .   .   Child: 0  Id: cc of type int [line: 12]
.   .   .   Child: 1  Op: [ of type int [line: 12]						.   .   .   Child: 1  Op: [ of type int [line: 12]
.   .   .   .   Child: 0  Id: dd of type int [line: 12]						.   .   .   .   Child: 0  Id: dd of type int [line: 12]
.   .   .   .   Child: 1  Const 3 of type int [line: 12]					.   .   .   .   Child: 1  Const 3 of type int [line: 12]
.   .   Sibling: 7  Assign: := of type int [line: 13]						.   .   Sibling: 7  Assign: := of type int [line: 13]
.   .   .   Child: 0  Op: [ of type int [line: 13]						.   .   .   Child: 0  Op: [ of type int [line: 13]
.   .   .   .   Child: 0  Id: cc of type int [line: 13]						.   .   .   .   Child: 0  Id: cc of type int [line: 13]
.   .   .   .   Child: 1  Op: [ of type int [line: 13]						.   .   .   .   Child: 1  Op: [ of type int [line: 13]
.   .   .   .   .   Child: 0  Id: ee of type int [line: 13]					.   .   .   .   .   Child: 0  Id: ee of type int [line: 13]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 13]					.   .   .   .   .   Child: 1  Const 3 of type int [line: 13]
.   .   .   Child: 1  Const 284 of type int [line: 13]						.   .   .   Child: 1  Const 284 of type int [line: 13]
Number of warnings: 5									      |	Number of warnings: 6
Number of errors: 0										Number of errors: 0
./tests/hw3/uninit: FAIL
Diff for ./tests/hw3/uninit:
EXPECTED | MINE
ERROR(3): Symbol 'z' is already declared at line 3.						ERROR(3): Symbol 'z' is already declared at line 3.
ERROR(3): Symbol 'z' is already declared at line 3.						ERROR(3): Symbol 'z' is already declared at line 3.
WARNING(5): Variable 'i' may be uninitialized when used here.					WARNING(5): Variable 'i' may be uninitialized when used here.
WARNING(7): Variable 'g' may be uninitialized when used here.					WARNING(7): Variable 'g' may be uninitialized when used here.
WARNING(8): Variable 'h' may be uninitialized when used here.					WARNING(8): Variable 'h' may be uninitialized when used here.
WARNING(9): Variable 'j' may be uninitialized when used here.					WARNING(9): Variable 'j' may be uninitialized when used here.
WARNING(10): Variable 'k' may be uninitialized when used here.					WARNING(10): Variable 'k' may be uninitialized when used here.
WARNING(11): Variable 'l' may be uninitialized when used here.					WARNING(11): Variable 'l' may be uninitialized when used here.
WARNING(12): Variable 'm' may be uninitialized when used here.					WARNING(12): Variable 'm' may be uninitialized when used here.
ERROR(13): Symbol 'dog' is not declared.							ERROR(13): Symbol 'dog' is not declared.
ERROR(14): Cannot use function 'main' as a variable.						ERROR(14): Cannot use function 'main' as a variable.
											      >	ERROR(14): ':=' requires operands of the same type but lhs is type void and rhs is type int.
WARNING(1): The variable 'x' seems not to be used.						WARNING(1): The variable 'x' seems not to be used.
ERROR(LINKER): A function named 'main()' must be defined.					ERROR(LINKER): A function named 'main()' must be defined.
Number of warnings: 8										Number of warnings: 8
Number of errors: 5									      |	Number of errors: 6
./tests/hw3/varAssign: PASS
./tests/hw3/var: PASS
./tests/hw3/varPair: PASS
./tests/hw3/while: PASS
./tests/hw3/whileif: PASS
Total tests passed: 46 out of 62
