ENTER_FUNCTION(3): ant
ENTER_COMPOUND(11)
ENTER_COMPOUND(18)
ENTER_COMPOUND(28)
LEAVE_FUNCTION(3): ant
ENTER_FUNCTION(37): bat
LEAVE_FUNCTION(37): bat
ENTER_FUNCTION(57): g
LEAVE_FUNCTION(57): g
ENTER_FUNCTION(62): g
LEAVE_FUNCTION(62): g
ENTER_FUNCTION(63): ant
LEAVE_FUNCTION(63): ant
Var: g  [line: 2]
Sibling: 1  Func: ant  [line: 3]
.   Child: 0  Parm: x  [line: 3]
.   Child: 1  Compound [line: 4]
.   .   Child: 0  Var: a  [line: 5]
.   .   Child: 1  Call: bat [line: 7]
.   .   .   Child: 0  Const 3 [line: 7]
.   .   Sibling: 1  Op: or [line: 8]
.   .   .   Child: 0  Id: a [line: 8]
.   .   .   Child: 1  Id: a [line: 8]
.   .   Sibling: 2  Id: x [line: 9]
.   .   Sibling: 3  Id: g [line: 10]
.   .   Sibling: 4  Compound [line: 11]
.   .   .   Child: 0  Var: c  [line: 12]
.   .   .   Child: 1  Id: a [line: 13]
.   .   .   Sibling: 1  Id: b [line: 14]
.   .   .   Sibling: 2  Id: c [line: 15]
.   .   .   Sibling: 3  Id: g [line: 16]
.   .   .   Sibling: 4  Id: x [line: 17]
.   .   .   Sibling: 5  Compound [line: 18]
.   .   .   .   Child: 0  Var: IWouldNotEatItWithAGoat  [line: 19]
.   .   .   .   Child: 1  Id: c [line: 20]
.   .   .   .   Sibling: 1  Id: a [line: 21]
.   .   Sibling: 5  Id: a [line: 24]
.   .   Sibling: 6  Id: b [line: 25]
.   .   Sibling: 7  Id: c [line: 26]
.   .   Sibling: 8  Id: x [line: 27]
.   .   Sibling: 9  Compound [line: 28]
.   .   .   Child: 1  Id: a [line: 29]
.   .   .   Sibling: 1  Id: b [line: 30]
.   .   .   Sibling: 2  Id: c [line: 31]
.   .   .   Sibling: 3  Id: x [line: 32]
.   .   Sibling: 10  Id: x [line: 34]
Sibling: 2  Func: bat  [line: 37]
.   Child: 0  Parm: y  [line: 37]
.   Child: 1  Compound [line: 38]
.   .   Child: 0  Var: z  [line: 39]
.   .   Sibling: 1  Var: bat  [line: 40]
.   .   Child: 1  Id: x [line: 41]
.   .   Sibling: 1  Call: ant [line: 42]
.   .   .   Child: 0  Id: y [line: 42]
.   .   Sibling: 2  Call: ant [line: 43]
.   .   .   Child: 0  Id: g [line: 43]
.   .   Sibling: 3  Call: ant [line: 44]
.   .   .   Child: 0  Id: z [line: 44]
.   .   Sibling: 4  Id: p [line: 45]
.   .   Sibling: 5  Op: + [line: 46]
.   .   .   Child: 0  Id: q [line: 46]
.   .   .   Child: 1  Id: r [line: 46]
.   .   Sibling: 6  Call: ant [line: 47]
.   .   .   Child: 0  Id: s [line: 47]
.   .   .   Sibling: 1  Id: t [line: 47]
.   .   Sibling: 7  Assign: := [line: 48]
.   .   .   Child: 0  Id: u [line: 48]
.   .   .   Child: 1  Call: cow [line: 48]
.   .   .   .   Child: 0  Id: v [line: 48]
.   .   Sibling: 8  Id: abraxsis [line: 49]
.   .   Sibling: 9  Id: a [line: 50]
.   .   Sibling: 10  Id: z [line: 51]
.   .   Sibling: 11  Id: g [line: 52]
Sibling: 3  Var: g  [line: 55]
Sibling: 4  Func: g  [line: 57]
.   Child: 1  Compound [line: 58]
.   .   Child: 1  Return [line: 59]
.   .   .   Child: 0  Id: x [line: 59]
Sibling: 5  Func: g  [line: 62]
.   Child: 1  Compound [line: 62]
Sibling: 6  Func: ant  [line: 63]
.   Child: 1  Compound [line: 63]
